{
  "body": {
    "actions": {
      "salesforce":[
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_CONTACT",
            "description": "Triggered when a user wants to Create Contact in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Contact ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "LastName": {
                  "type": "string",
                  "description": "Last Name"
                },
                "FirstName": {
                  "type": "string",
                  "description": "First Name"
                },
                "Salutation": {
                  "type": "string",
                  "description": "Salutation",
                  "enum": [
                    "Mr.",
                    "Ms.",
                    "Mrs.",
                    "Dr.",
                    "Prof.",
                    "Mx."
                  ]
                },
                "Name": {
                  "type": "string",
                  "description": "Full Name"
                },
                "OtherStreet": {
                  "type": "string",
                  "description": "Other Street"
                },
                "OtherCity": {
                  "type": "string",
                  "description": "Other City"
                },
                "OtherState": {
                  "type": "string",
                  "description": "Other State/Province"
                },
                "OtherPostalCode": {
                  "type": "string",
                  "description": "Other Zip/Postal Code"
                },
                "OtherCountry": {
                  "type": "string",
                  "description": "Other Country"
                },
                "OtherLatitude": {
                  "type": "string",
                  "description": "Other Latitude"
                },
                "OtherLongitude": {
                  "type": "string",
                  "description": "Other Longitude"
                },
                "OtherGeocodeAccuracy": {
                  "type": "string",
                  "description": "Other Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "OtherAddress": {
                  "type": "string",
                  "description": "Other Address"
                },
                "MailingStreet": {
                  "type": "string",
                  "description": "Mailing Street"
                },
                "MailingCity": {
                  "type": "string",
                  "description": "Mailing City"
                },
                "MailingState": {
                  "type": "string",
                  "description": "Mailing State/Province"
                },
                "MailingPostalCode": {
                  "type": "string",
                  "description": "Mailing Zip/Postal Code"
                },
                "MailingCountry": {
                  "type": "string",
                  "description": "Mailing Country"
                },
                "MailingLatitude": {
                  "type": "string",
                  "description": "Mailing Latitude"
                },
                "MailingLongitude": {
                  "type": "string",
                  "description": "Mailing Longitude"
                },
                "MailingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Mailing Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "MailingAddress": {
                  "type": "string",
                  "description": "Mailing Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Business Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Business Fax"
                },
                "MobilePhone": {
                  "type": "string",
                  "description": "Mobile Phone"
                },
                "HomePhone": {
                  "type": "string",
                  "description": "Home Phone"
                },
                "OtherPhone": {
                  "type": "string",
                  "description": "Other Phone"
                },
                "AssistantPhone": {
                  "type": "string",
                  "description": "Asst. Phone"
                },
                "ReportsToId": {
                  "type": "string",
                  "description": "Reports To ID"
                },
                "Email": {
                  "type": "string",
                  "description": "Email"
                },
                "Title": {
                  "type": "string",
                  "description": "Title"
                },
                "Department": {
                  "type": "string",
                  "description": "Department"
                },
                "AssistantName": {
                  "type": "string",
                  "description": "Assistant's Name"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "Birthdate": {
                  "type": "string",
                  "description": "Birthdate"
                },
                "Description": {
                  "type": "string",
                  "description": "Contact Description"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastCURequestDate": {
                  "type": "string",
                  "description": "Last Stay-in-Touch Request Date"
                },
                "LastCUUpdateDate": {
                  "type": "string",
                  "description": "Last Stay-in-Touch Save Date"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "EmailBouncedReason": {
                  "type": "string",
                  "description": "Email Bounced Reason"
                },
                "EmailBouncedDate": {
                  "type": "string",
                  "description": "Email Bounced Date"
                },
                "IsEmailBounced": {
                  "type": "boolean",
                  "description": "Is Email Bounced"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawContactId": {
                  "type": "string",
                  "description": "Jigsaw Contact ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "IndividualId": {
                  "type": "string",
                  "description": "Individual ID"
                },
                "IsPriorityRecord": {
                  "type": "boolean",
                  "description": "Important"
                },
                "ContactSource": {
                  "type": "string",
                  "description": "Creation Source",
                  "enum": [
                    "Auto Create"
                  ]
                },
                "Level__c": {
                  "type": "string",
                  "description": "Level",
                  "enum": [
                    "Secondary",
                    "Tertiary",
                    "Primary"
                  ]
                },
                "Languages__c": {
                  "type": "string",
                  "description": "Languages"
                },
                "BANT__c": {
                  "type": "string",
                  "description": "BANT"
                }
              },
              "required": [
                "LastName",
                "Name"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_LEAD",
            "description": "Triggered when a user wants to Create Lead in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Lead ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "LastName": {
                  "type": "string",
                  "description": "Last Name"
                },
                "FirstName": {
                  "type": "string",
                  "description": "First Name"
                },
                "Salutation": {
                  "type": "string",
                  "description": "Salutation",
                  "enum": [
                    "Mr.",
                    "Ms.",
                    "Mrs.",
                    "Dr.",
                    "Prof.",
                    "Mx."
                  ]
                },
                "Name": {
                  "type": "string",
                  "description": "Full Name"
                },
                "Title": {
                  "type": "string",
                  "description": "Title"
                },
                "Company": {
                  "type": "string",
                  "description": "Company"
                },
                "Street": {
                  "type": "string",
                  "description": "Street"
                },
                "City": {
                  "type": "string",
                  "description": "City"
                },
                "State": {
                  "type": "string",
                  "description": "State/Province"
                },
                "PostalCode": {
                  "type": "string",
                  "description": "Zip/Postal Code"
                },
                "Country": {
                  "type": "string",
                  "description": "Country"
                },
                "Latitude": {
                  "type": "string",
                  "description": "Latitude"
                },
                "Longitude": {
                  "type": "string",
                  "description": "Longitude"
                },
                "GeocodeAccuracy": {
                  "type": "string",
                  "description": "Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "Address": {
                  "type": "string",
                  "description": "Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Phone"
                },
                "MobilePhone": {
                  "type": "string",
                  "description": "Mobile Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Fax"
                },
                "Email": {
                  "type": "string",
                  "description": "Email"
                },
                "Website": {
                  "type": "string",
                  "description": "Website"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "Status": {
                  "type": "string",
                  "description": "Status",
                  "enum": [
                    "Open - Not Contacted",
                    "Working - Contacted",
                    "Closed - Converted",
                    "Closed - Not Converted"
                  ]
                },
                "Industry": {
                  "type": "string",
                  "description": "Industry",
                  "enum": [
                    "Agriculture",
                    "Apparel",
                    "Banking",
                    "Biotechnology",
                    "Chemicals",
                    "Communications",
                    "Construction",
                    "Consulting",
                    "Education",
                    "Electronics",
                    "Energy",
                    "Engineering",
                    "Entertainment",
                    "Environmental",
                    "Finance",
                    "Food & Beverage",
                    "Government",
                    "Healthcare",
                    "Hospitality",
                    "Insurance",
                    "Machinery",
                    "Manufacturing",
                    "Media",
                    "Not For Profit",
                    "Recreation",
                    "Retail",
                    "Shipping",
                    "Technology",
                    "Telecommunications",
                    "Transportation",
                    "Utilities",
                    "Other"
                  ]
                },
                "Rating": {
                  "type": "string",
                  "description": "Rating",
                  "enum": [
                    "Hot",
                    "Warm",
                    "Cold"
                  ]
                },
                "AnnualRevenue": {
                  "type": "string",
                  "description": "Annual Revenue"
                },
                "NumberOfEmployees": {
                  "type": "integer",
                  "description": "Employees"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "IsConverted": {
                  "type": "boolean",
                  "description": "Converted"
                },
                "ConvertedDate": {
                  "type": "string",
                  "description": "Converted Date"
                },
                "ConvertedAccountId": {
                  "type": "string",
                  "description": "Converted Account ID"
                },
                "ConvertedContactId": {
                  "type": "string",
                  "description": "Converted Contact ID"
                },
                "ConvertedOpportunityId": {
                  "type": "string",
                  "description": "Converted Opportunity ID"
                },
                "IsUnreadByOwner": {
                  "type": "boolean",
                  "description": "Unread By Owner"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawContactId": {
                  "type": "string",
                  "description": "Jigsaw Contact ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "CompanyDunsNumber": {
                  "type": "string",
                  "description": "Company D-U-N-S Number"
                },
                "DandbCompanyId": {
                  "type": "string",
                  "description": "D&B Company ID"
                },
                "EmailBouncedReason": {
                  "type": "string",
                  "description": "Email Bounced Reason"
                },
                "EmailBouncedDate": {
                  "type": "string",
                  "description": "Email Bounced Date"
                },
                "IndividualId": {
                  "type": "string",
                  "description": "Individual ID"
                },
                "IsPriorityRecord": {
                  "type": "boolean",
                  "description": "Important"
                },
                "SICCode__c": {
                  "type": "string",
                  "description": "SIC Code"
                },
                "ProductInterest__c": {
                  "type": "string",
                  "description": "Product Interest",
                  "enum": [
                    "GC1000 series",
                    "GC5000 series",
                    "GC3000 series"
                  ]
                },
                "Primary__c": {
                  "type": "string",
                  "description": "Primary",
                  "enum": [
                    "No",
                    "Yes"
                  ]
                },
                "CurrentGenerators__c": {
                  "type": "string",
                  "description": "Current Generator(s)"
                },
                "NumberofLocations__c": {
                  "type": "string",
                  "description": "Number of Locations"
                }
              },
              "required": [
                "LastName",
                "Name",
                "Company"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_OPPORTUNITY",
            "description": "Triggered when a user wants to Create Opportunity in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Opportunity ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsPrivate": {
                  "type": "boolean",
                  "description": "Private"
                },
                "Name": {
                  "type": "string",
                  "description": "Name"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "StageName": {
                  "type": "string",
                  "description": "Stage",
                  "enum": [
                    "Prospecting",
                    "Qualification",
                    "Needs Analysis",
                    "Value Proposition",
                    "Id. Decision Makers",
                    "Perception Analysis",
                    "Proposal/Price Quote",
                    "Negotiation/Review",
                    "Closed Won",
                    "Closed Lost"
                  ]
                },
                "Amount": {
                  "type": "string",
                  "description": "Amount"
                },
                "Probability": {
                  "type": "string",
                  "description": "Probability (%)"
                },
                "ExpectedRevenue": {
                  "type": "string",
                  "description": "Expected Amount"
                },
                "TotalOpportunityQuantity": {
                  "type": "string",
                  "description": "Quantity"
                },
                "CloseDate": {
                  "type": "string",
                  "description": "Close Date"
                },
                "Type": {
                  "type": "string",
                  "description": "Opportunity Type",
                  "enum": [
                    "Existing Customer - Upgrade",
                    "Existing Customer - Replacement",
                    "Existing Customer - Downgrade",
                    "New Customer"
                  ]
                },
                "NextStep": {
                  "type": "string",
                  "description": "Next Step"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "IsClosed": {
                  "type": "boolean",
                  "description": "Closed"
                },
                "IsWon": {
                  "type": "boolean",
                  "description": "Won"
                },
                "ForecastCategory": {
                  "type": "string",
                  "description": "Forecast Category",
                  "enum": [
                    "Omitted",
                    "Pipeline",
                    "BestCase",
                    "MostLikely",
                    "Forecast",
                    "Closed"
                  ]
                },
                "ForecastCategoryName": {
                  "type": "string",
                  "description": "Forecast Category",
                  "enum": [
                    "Omitted",
                    "Pipeline",
                    "Best Case",
                    "Commit",
                    "Closed"
                  ]
                },
                "CampaignId": {
                  "type": "string",
                  "description": "Campaign ID"
                },
                "HasOpportunityLineItem": {
                  "type": "boolean",
                  "description": "Has Line Item"
                },
                "Pricebook2Id": {
                  "type": "string",
                  "description": "Price Book ID"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "PushCount": {
                  "type": "integer",
                  "description": "Push Count"
                },
                "LastStageChangeDate": {
                  "type": "string",
                  "description": "Last Stage Change Date"
                },
                "FiscalQuarter": {
                  "type": "integer",
                  "description": "Fiscal Quarter"
                },
                "FiscalYear": {
                  "type": "integer",
                  "description": "Fiscal Year"
                },
                "Fiscal": {
                  "type": "string",
                  "description": "Fiscal Period"
                },
                "ContactId": {
                  "type": "string",
                  "description": "Contact ID"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "HasOpenActivity": {
                  "type": "boolean",
                  "description": "Has Open Activity"
                },
                "HasOverdueTask": {
                  "type": "boolean",
                  "description": "Has Overdue Task"
                },
                "LastAmountChangedHistoryId": {
                  "type": "string",
                  "description": "Opportunity History ID"
                },
                "LastCloseDateChangedHistoryId": {
                  "type": "string",
                  "description": "Opportunity History ID"
                },
                "DeliveryInstallationStatus__c": {
                  "type": "string",
                  "description": "Delivery/Installation Status",
                  "enum": [
                    "In progress",
                    "Yet to begin",
                    "Completed"
                  ]
                },
                "TrackingNumber__c": {
                  "type": "string",
                  "description": "Tracking Number"
                },
                "OrderNumber__c": {
                  "type": "string",
                  "description": "Order Number"
                },
                "CurrentGenerators__c": {
                  "type": "string",
                  "description": "Current Generator(s)"
                },
                "MainCompetitors__c": {
                  "type": "string",
                  "description": "Main Competitor(s)"
                },
                "Budget__c": {
                  "type": "string",
                  "description": "Budget"
                },
                "Authority__c": {
                  "type": "string",
                  "description": "Authority"
                },
                "Need__c": {
                  "type": "string",
                  "description": "Need"
                },
                "Timing__c": {
                  "type": "string",
                  "description": "Timing"
                }
              },
              "required": [
                "Name",
                "StageName",
                "CloseDate",
                "ForecastCategory"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_TASK",
            "description": "Triggered when a user wants to Create Task in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Activity ID"
                },
                "WhoId": {
                  "type": "string",
                  "description": "Name ID"
                },
                "WhatId": {
                  "type": "string",
                  "description": "Related To ID"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject"
                },
                "ActivityDate": {
                  "type": "string",
                  "description": "Due Date Only"
                },
                "Status": {
                  "type": "string",
                  "description": "Status",
                  "enum": [
                    "Not Started",
                    "In Progress",
                    "Completed",
                    "Waiting on someone else",
                    "Deferred"
                  ]
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority",
                  "enum": [
                    "High",
                    "Normal",
                    "Low"
                  ]
                },
                "IsHighPriority": {
                  "type": "boolean",
                  "description": "High Priority"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Assigned To ID"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsClosed": {
                  "type": "boolean",
                  "description": "Closed"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "IsArchived": {
                  "type": "boolean",
                  "description": "Archived"
                },
                "CallDurationInSeconds": {
                  "type": "integer",
                  "description": "Call Duration"
                },
                "CallType": {
                  "type": "string",
                  "description": "Call Type",
                  "enum": [
                    "Internal",
                    "Inbound",
                    "Outbound"
                  ]
                },
                "CallDisposition": {
                  "type": "string",
                  "description": "Call Result"
                },
                "CallObject": {
                  "type": "string",
                  "description": "Call Object Identifier"
                },
                "ReminderDateTime": {
                  "type": "string",
                  "description": "Reminder Date/Time"
                },
                "IsReminderSet": {
                  "type": "boolean",
                  "description": "Reminder Set"
                },
                "RecurrenceActivityId": {
                  "type": "string",
                  "description": "Recurrence Activity ID"
                },
                "IsRecurrence": {
                  "type": "boolean",
                  "description": "Create Recurring Series of Tasks"
                },
                "RecurrenceStartDateOnly": {
                  "type": "string",
                  "description": "Recurrence Start"
                },
                "RecurrenceEndDateOnly": {
                  "type": "string",
                  "description": "Recurrence End"
                },
                "RecurrenceTimeZoneSidKey": {
                  "type": "string",
                  "description": "Recurrence Time Zone",
                  "enum": [
                    "Pacific/Kiritimati",
                    "Pacific/Chatham",
                    "Antarctica/McMurdo",
                    "Pacific/Apia",
                    "Pacific/Auckland",
                    "Pacific/Enderbury",
                    "Pacific/Fakaofo",
                    "Pacific/Tongatapu",
                    "Asia/Anadyr",
                    "Asia/Kamchatka",
                    "Pacific/Fiji",
                    "Pacific/Funafuti",
                    "Pacific/Kwajalein",
                    "Pacific/Majuro",
                    "Pacific/Nauru",
                    "Pacific/Norfolk",
                    "Pacific/Tarawa",
                    "Pacific/Wake",
                    "Pacific/Wallis",
                    "Antarctica/Macquarie",
                    "Asia/Magadan",
                    "Asia/Sakhalin",
                    "Asia/Srednekolymsk",
                    "Australia/Currie",
                    "Australia/Hobart",
                    "Australia/Lord_Howe",
                    "Australia/Melbourne",
                    "Australia/Sydney",
                    "Pacific/Bougainville",
                    "Pacific/Efate",
                    "Pacific/Guadalcanal",
                    "Pacific/Kosrae",
                    "Pacific/Noumea",
                    "Pacific/Ponape",
                    "Australia/Adelaide",
                    "Australia/Broken_Hill",
                    "Antarctica/DumontDUrville",
                    "Asia/Ust-Nera",
                    "Asia/Vladivostok",
                    "Australia/Brisbane",
                    "Australia/Lindeman",
                    "Pacific/Guam",
                    "Pacific/Port_Moresby",
                    "Pacific/Saipan",
                    "Pacific/Truk",
                    "Australia/Darwin",
                    "Asia/Chita",
                    "Asia/Dili",
                    "Asia/Jayapura",
                    "Asia/Khandyga",
                    "Asia/Seoul",
                    "Asia/Tokyo",
                    "Asia/Yakutsk",
                    "Pacific/Palau",
                    "Australia/Eucla",
                    "Antarctica/Casey",
                    "Asia/Brunei",
                    "Asia/Choibalsan",
                    "Asia/Hong_Kong",
                    "Asia/Irkutsk",
                    "Asia/Kuala_Lumpur",
                    "Asia/Kuching",
                    "Asia/Macau",
                    "Asia/Makassar",
                    "Asia/Manila",
                    "Asia/Shanghai",
                    "Asia/Singapore",
                    "Asia/Taipei",
                    "Asia/Ulaanbaatar",
                    "Australia/Perth",
                    "Antarctica/Davis",
                    "Asia/Bangkok",
                    "Asia/Barnaul",
                    "Asia/Ho_Chi_Minh",
                    "Asia/Hovd",
                    "Asia/Jakarta",
                    "Asia/Krasnoyarsk",
                    "Asia/Novokuznetsk",
                    "Asia/Novosibirsk",
                    "Asia/Phnom_Penh",
                    "Asia/Pontianak",
                    "Asia/Tomsk",
                    "Asia/Vientiane",
                    "Indian/Christmas",
                    "Asia/Rangoon",
                    "Indian/Cocos",
                    "Asia/Bishkek",
                    "Asia/Dhaka",
                    "Asia/Omsk",
                    "Asia/Thimphu",
                    "Asia/Urumqi",
                    "Indian/Chagos",
                    "Asia/Kathmandu",
                    "Asia/Colombo",
                    "Asia/Kolkata",
                    "Antarctica/Mawson",
                    "Antarctica/Vostok",
                    "Asia/Almaty",
                    "Asia/Aqtau",
                    "Asia/Aqtobe",
                    "Asia/Ashgabat",
                    "Asia/Atyrau",
                    "Asia/Dushanbe",
                    "Asia/Karachi",
                    "Asia/Oral",
                    "Asia/Qostanay",
                    "Asia/Qyzylorda",
                    "Asia/Samarkand",
                    "Asia/Tashkent",
                    "Asia/Yekaterinburg",
                    "Indian/Kerguelen",
                    "Indian/Maldives",
                    "Asia/Kabul",
                    "Asia/Baku",
                    "Asia/Dubai",
                    "Asia/Muscat",
                    "Asia/Tbilisi",
                    "Asia/Yerevan",
                    "Europe/Astrakhan",
                    "Europe/Samara",
                    "Europe/Saratov",
                    "Europe/Ulyanovsk",
                    "Indian/Mahe",
                    "Indian/Mauritius",
                    "Indian/Reunion",
                    "Africa/Addis_Ababa",
                    "Africa/Asmera",
                    "Africa/Dar_es_Salaam",
                    "Africa/Djibouti",
                    "Africa/Kampala",
                    "Africa/Mogadishu",
                    "Africa/Nairobi",
                    "Antarctica/Syowa",
                    "Asia/Aden",
                    "Asia/Amman",
                    "Asia/Baghdad",
                    "Asia/Bahrain",
                    "Asia/Kuwait",
                    "Asia/Qatar",
                    "Asia/Riyadh",
                    "Europe/Istanbul",
                    "Europe/Kirov",
                    "Europe/Minsk",
                    "Europe/Moscow",
                    "Europe/Volgograd",
                    "Indian/Antananarivo",
                    "Indian/Comoro",
                    "Indian/Mayotte",
                    "Africa/Blantyre",
                    "Africa/Bujumbura",
                    "Africa/Cairo",
                    "Africa/Gaborone",
                    "Africa/Harare",
                    "Africa/Johannesburg",
                    "Africa/Juba",
                    "Africa/Khartoum",
                    "Africa/Kigali",
                    "Africa/Lubumbashi",
                    "Africa/Lusaka",
                    "Africa/Maputo",
                    "Africa/Maseru",
                    "Africa/Mbabane",
                    "Africa/Tripoli",
                    "Africa/Windhoek",
                    "Asia/Beirut",
                    "Asia/Famagusta",
                    "Asia/Gaza",
                    "Asia/Hebron",
                    "Asia/Jerusalem",
                    "Asia/Nicosia",
                    "Europe/Athens",
                    "Europe/Bucharest",
                    "Europe/Chisinau",
                    "Europe/Helsinki",
                    "Europe/Kaliningrad",
                    "Europe/Kiev",
                    "Europe/Mariehamn",
                    "Europe/Riga",
                    "Europe/Sofia",
                    "Europe/Tallinn",
                    "Europe/Uzhgorod",
                    "Europe/Vilnius",
                    "Europe/Zaporozhye",
                    "Africa/Algiers",
                    "Africa/Bangui",
                    "Africa/Brazzaville",
                    "Africa/Ceuta",
                    "Africa/Douala",
                    "Africa/Kinshasa",
                    "Africa/Lagos",
                    "Africa/Libreville",
                    "Africa/Luanda",
                    "Africa/Malabo",
                    "Africa/Ndjamena",
                    "Africa/Niamey",
                    "Africa/Porto-Novo",
                    "Africa/Tunis",
                    "Arctic/Longyearbyen",
                    "Europe/Amsterdam",
                    "Europe/Andorra",
                    "Europe/Belgrade",
                    "Europe/Berlin",
                    "Europe/Bratislava",
                    "Europe/Brussels",
                    "Europe/Budapest",
                    "Europe/Busingen",
                    "Europe/Copenhagen",
                    "Europe/Gibraltar",
                    "Europe/Ljubljana",
                    "Europe/Luxembourg",
                    "Europe/Madrid",
                    "Europe/Malta",
                    "Europe/Monaco",
                    "Europe/Oslo",
                    "Europe/Paris",
                    "Europe/Podgorica",
                    "Europe/Prague",
                    "Europe/Rome",
                    "Europe/San_Marino",
                    "Europe/Sarajevo",
                    "Europe/Skopje",
                    "Europe/Stockholm",
                    "Europe/Tirane",
                    "Europe/Vaduz",
                    "Europe/Vatican",
                    "Europe/Vienna",
                    "Europe/Warsaw",
                    "Europe/Zagreb",
                    "Europe/Zurich",
                    "Africa/Abidjan",
                    "Africa/Accra",
                    "Africa/Bamako",
                    "Africa/Banjul",
                    "Africa/Bissau",
                    "Africa/Casablanca",
                    "Africa/Conakry",
                    "Africa/Dakar",
                    "Africa/El_Aaiun",
                    "Africa/Freetown",
                    "Africa/Lome",
                    "Africa/Monrovia",
                    "Africa/Nouakchott",
                    "Africa/Ouagadougou",
                    "Africa/Sao_Tome",
                    "America/Danmarkshavn",
                    "Antarctica/Troll",
                    "Atlantic/Canary",
                    "Atlantic/Faeroe",
                    "Atlantic/Madeira",
                    "Atlantic/Reykjavik",
                    "Atlantic/St_Helena",
                    "Europe/Dublin",
                    "Europe/Guernsey",
                    "Europe/Isle_of_Man",
                    "Europe/Jersey",
                    "Europe/Lisbon",
                    "Europe/London",
                    "GMT",
                    "Atlantic/Azores",
                    "Atlantic/Cape_Verde",
                    "America/Godthab",
                    "America/Noronha",
                    "America/Scoresbysund",
                    "Atlantic/South_Georgia",
                    "America/Araguaina",
                    "America/Argentina/Buenos_Aires",
                    "America/Argentina/La_Rioja",
                    "America/Argentina/Rio_Gallegos",
                    "America/Argentina/Salta",
                    "America/Argentina/San_Juan",
                    "America/Argentina/San_Luis",
                    "America/Argentina/Tucuman",
                    "America/Argentina/Ushuaia",
                    "America/Asuncion",
                    "America/Bahia",
                    "America/Belem",
                    "America/Catamarca",
                    "America/Cayenne",
                    "America/Cordoba",
                    "America/Fortaleza",
                    "America/Jujuy",
                    "America/Maceio",
                    "America/Mendoza",
                    "America/Miquelon",
                    "America/Montevideo",
                    "America/Paramaribo",
                    "America/Punta_Arenas",
                    "America/Recife",
                    "America/Santarem",
                    "America/Santiago",
                    "America/Sao_Paulo",
                    "Antarctica/Palmer",
                    "Antarctica/Rothera",
                    "Atlantic/Stanley",
                    "America/St_Johns",
                    "America/Anguilla",
                    "America/Antigua",
                    "America/Aruba",
                    "America/Barbados",
                    "America/Blanc-Sablon",
                    "America/Boa_Vista",
                    "America/Campo_Grande",
                    "America/Caracas",
                    "America/Cuiaba",
                    "America/Curacao",
                    "America/Dominica",
                    "America/Glace_Bay",
                    "America/Goose_Bay",
                    "America/Grenada",
                    "America/Guadeloupe",
                    "America/Guyana",
                    "America/Halifax",
                    "America/Kralendijk",
                    "America/La_Paz",
                    "America/Lower_Princes",
                    "America/Manaus",
                    "America/Marigot",
                    "America/Martinique",
                    "America/Moncton",
                    "America/Montserrat",
                    "America/Port_of_Spain",
                    "America/Porto_Velho",
                    "America/Puerto_Rico",
                    "America/Santo_Domingo",
                    "America/St_Barthelemy",
                    "America/St_Kitts",
                    "America/St_Lucia",
                    "America/St_Thomas",
                    "America/St_Vincent",
                    "America/Thule",
                    "America/Tortola",
                    "Atlantic/Bermuda",
                    "America/Bogota",
                    "America/Cancun",
                    "America/Cayman",
                    "America/Coral_Harbour",
                    "America/Detroit",
                    "America/Eirunepe",
                    "America/Grand_Turk",
                    "America/Guayaquil",
                    "America/Indiana/Indianapolis",
                    "America/Indiana/Marengo",
                    "America/Indiana/Petersburg",
                    "America/Indiana/Vevay",
                    "America/Indiana/Vincennes",
                    "America/Indiana/Winamac",
                    "America/Iqaluit",
                    "America/Jamaica",
                    "America/Kentucky/Monticello",
                    "America/Lima",
                    "America/Louisville",
                    "America/Montreal",
                    "America/Nassau",
                    "America/New_York",
                    "America/Nipigon",
                    "America/Panama",
                    "America/Pangnirtung",
                    "America/Port-au-Prince",
                    "America/Rio_Branco",
                    "America/Thunder_Bay",
                    "America/Toronto",
                    "Pacific/Easter",
                    "America/Bahia_Banderas",
                    "America/Belize",
                    "America/Chicago",
                    "America/Chihuahua",
                    "America/Costa_Rica",
                    "America/El_Salvador",
                    "America/Guatemala",
                    "America/Indiana/Knox",
                    "America/Indiana/Tell_City",
                    "America/Managua",
                    "America/Matamoros",
                    "America/Menominee",
                    "America/Merida",
                    "America/Mexico_City",
                    "America/Monterrey",
                    "America/North_Dakota/Beulah",
                    "America/North_Dakota/Center",
                    "America/North_Dakota/New_Salem",
                    "America/Ojinaga",
                    "America/Rainy_River",
                    "America/Rankin_Inlet",
                    "America/Regina",
                    "America/Resolute",
                    "America/Swift_Current",
                    "America/Tegucigalpa",
                    "America/Winnipeg",
                    "Pacific/Galapagos",
                    "America/Boise",
                    "America/Cambridge_Bay",
                    "America/Creston",
                    "America/Dawson",
                    "America/Dawson_Creek",
                    "America/Denver",
                    "America/Edmonton",
                    "America/Fort_Nelson",
                    "America/Hermosillo",
                    "America/Inuvik",
                    "America/Mazatlan",
                    "America/Phoenix",
                    "America/Whitehorse",
                    "America/Yellowknife",
                    "America/Los_Angeles",
                    "America/Santa_Isabel",
                    "America/Tijuana",
                    "America/Vancouver",
                    "Pacific/Pitcairn",
                    "America/Anchorage",
                    "America/Juneau",
                    "America/Metlakatla",
                    "America/Nome",
                    "America/Sitka",
                    "America/Yakutat",
                    "Pacific/Gambier",
                    "Pacific/Marquesas",
                    "America/Adak",
                    "Pacific/Honolulu",
                    "Pacific/Johnston",
                    "Pacific/Rarotonga",
                    "Pacific/Tahiti",
                    "Pacific/Midway",
                    "Pacific/Niue",
                    "Pacific/Pago_Pago"
                  ]
                },
                "RecurrenceType": {
                  "type": "string",
                  "description": "Recurrence Type",
                  "enum": [
                    "RecursDaily",
                    "RecursEveryWeekday",
                    "RecursMonthly",
                    "RecursMonthlyNth",
                    "RecursWeekly",
                    "RecursYearly",
                    "RecursYearlyNth"
                  ]
                },
                "RecurrenceInterval": {
                  "type": "integer",
                  "description": "Recurrence Interval"
                },
                "RecurrenceDayOfWeekMask": {
                  "type": "integer",
                  "description": "Recurrence Day of Week Mask"
                },
                "RecurrenceDayOfMonth": {
                  "type": "integer",
                  "description": "Recurrence Day of Month"
                },
                "RecurrenceInstance": {
                  "type": "string",
                  "description": "Recurrence Instance",
                  "enum": [
                    "First",
                    "Second",
                    "Third",
                    "Fourth",
                    "Last"
                  ]
                },
                "RecurrenceMonthOfYear": {
                  "type": "string",
                  "description": "Recurrence Month of Year",
                  "enum": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                },
                "RecurrenceRegeneratedType": {
                  "type": "string",
                  "description": "Repeat This Task",
                  "enum": [
                    "RecurrenceRegenerateAfterDueDate",
                    "RecurrenceRegenerateAfterToday",
                    "RecurrenceRegenerated"
                  ]
                },
                "TaskSubtype": {
                  "type": "string",
                  "description": "Task Subtype",
                  "enum": [
                    "Task",
                    "Email",
                    "ListEmail",
                    "Cadence",
                    "Call",
                    "LinkedIn"
                  ]
                },
                "CompletedDateTime": {
                  "type": "string",
                  "description": "Completed Date/Time"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_ACCOUNT",
            "description": "Triggered when a user wants to Create Account in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "Name": {
                  "type": "string",
                  "description": "Account Name"
                },
                "Type": {
                  "type": "string",
                  "description": "Account Type",
                  "enum": [
                    "Prospect",
                    "Customer - Direct",
                    "Customer - Channel",
                    "Channel Partner / Reseller",
                    "Installation Partner",
                    "Technology Partner",
                    "Other"
                  ]
                },
                "ParentId": {
                  "type": "string",
                  "description": "Parent Account ID"
                },
                "BillingStreet": {
                  "type": "string",
                  "description": "Billing Street"
                },
                "BillingCity": {
                  "type": "string",
                  "description": "Billing City"
                },
                "BillingState": {
                  "type": "string",
                  "description": "Billing State/Province"
                },
                "BillingPostalCode": {
                  "type": "string",
                  "description": "Billing Zip/Postal Code"
                },
                "BillingCountry": {
                  "type": "string",
                  "description": "Billing Country"
                },
                "BillingLatitude": {
                  "type": "string",
                  "description": "Billing Latitude"
                },
                "BillingLongitude": {
                  "type": "string",
                  "description": "Billing Longitude"
                },
                "BillingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Billing Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "BillingAddress": {
                  "type": "string",
                  "description": "Billing Address"
                },
                "ShippingStreet": {
                  "type": "string",
                  "description": "Shipping Street"
                },
                "ShippingCity": {
                  "type": "string",
                  "description": "Shipping City"
                },
                "ShippingState": {
                  "type": "string",
                  "description": "Shipping State/Province"
                },
                "ShippingPostalCode": {
                  "type": "string",
                  "description": "Shipping Zip/Postal Code"
                },
                "ShippingCountry": {
                  "type": "string",
                  "description": "Shipping Country"
                },
                "ShippingLatitude": {
                  "type": "string",
                  "description": "Shipping Latitude"
                },
                "ShippingLongitude": {
                  "type": "string",
                  "description": "Shipping Longitude"
                },
                "ShippingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Shipping Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "ShippingAddress": {
                  "type": "string",
                  "description": "Shipping Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Account Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Account Fax"
                },
                "AccountNumber": {
                  "type": "string",
                  "description": "Account Number"
                },
                "Website": {
                  "type": "string",
                  "description": "Website"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Sic": {
                  "type": "string",
                  "description": "SIC Code"
                },
                "Industry": {
                  "type": "string",
                  "description": "Industry",
                  "enum": [
                    "Agriculture",
                    "Apparel",
                    "Banking",
                    "Biotechnology",
                    "Chemicals",
                    "Communications",
                    "Construction",
                    "Consulting",
                    "Education",
                    "Electronics",
                    "Energy",
                    "Engineering",
                    "Entertainment",
                    "Environmental",
                    "Finance",
                    "Food & Beverage",
                    "Government",
                    "Healthcare",
                    "Hospitality",
                    "Insurance",
                    "Machinery",
                    "Manufacturing",
                    "Media",
                    "Not For Profit",
                    "Recreation",
                    "Retail",
                    "Shipping",
                    "Technology",
                    "Telecommunications",
                    "Transportation",
                    "Utilities",
                    "Other"
                  ]
                },
                "AnnualRevenue": {
                  "type": "string",
                  "description": "Annual Revenue"
                },
                "NumberOfEmployees": {
                  "type": "integer",
                  "description": "Employees"
                },
                "Ownership": {
                  "type": "string",
                  "description": "Ownership",
                  "enum": [
                    "Public",
                    "Private",
                    "Subsidiary",
                    "Other"
                  ]
                },
                "TickerSymbol": {
                  "type": "string",
                  "description": "Ticker Symbol"
                },
                "Description": {
                  "type": "string",
                  "description": "Account Description"
                },
                "Rating": {
                  "type": "string",
                  "description": "Account Rating",
                  "enum": [
                    "Hot",
                    "Warm",
                    "Cold"
                  ]
                },
                "Site": {
                  "type": "string",
                  "description": "Account Site"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawCompanyId": {
                  "type": "string",
                  "description": "Jigsaw Company ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "AccountSource": {
                  "type": "string",
                  "description": "Account Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "DunsNumber": {
                  "type": "string",
                  "description": "D-U-N-S Number"
                },
                "Tradestyle": {
                  "type": "string",
                  "description": "Tradestyle"
                },
                "NaicsCode": {
                  "type": "string",
                  "description": "NAICS Code"
                },
                "NaicsDesc": {
                  "type": "string",
                  "description": "NAICS Description"
                },
                "YearStarted": {
                  "type": "string",
                  "description": "Year Started"
                },
                "SicDesc": {
                  "type": "string",
                  "description": "SIC Description"
                },
                "DandbCompanyId": {
                  "type": "string",
                  "description": "D&B Company ID"
                },
                "OperatingHoursId": {
                  "type": "string",
                  "description": "Operating Hour ID"
                },
                "CustomerPriority__c": {
                  "type": "string",
                  "description": "Customer Priority",
                  "enum": [
                    "High",
                    "Low",
                    "Medium"
                  ]
                },
                "SLA__c": {
                  "type": "string",
                  "description": "SLA",
                  "enum": [
                    "Gold",
                    "Silver",
                    "Platinum",
                    "Bronze"
                  ]
                },
                "Active__c": {
                  "type": "string",
                  "description": "Active",
                  "enum": [
                    "No",
                    "Yes"
                  ]
                },
                "NumberofLocations__c": {
                  "type": "string",
                  "description": "Number of Locations"
                },
                "UpsellOpportunity__c": {
                  "type": "string",
                  "description": "Upsell Opportunity",
                  "enum": [
                    "Maybe",
                    "No",
                    "Yes"
                  ]
                },
                "SLASerialNumber__c": {
                  "type": "string",
                  "description": "SLA Serial Number"
                },
                "SLAExpirationDate__c": {
                  "type": "string",
                  "description": "SLA Expiration Date"
                }
              },
              "required": [
                "Name",
                "Name"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_RECORD_ANY",
            "description": "Triggered when a user wants to Create Any an unknown object typein Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                }
              },
              "required": [
                "recordType"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_CONTACT",
            "description": "Triggered when a user wants to Update Contact in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Contact ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "LastName": {
                  "type": "string",
                  "description": "Last Name"
                },
                "FirstName": {
                  "type": "string",
                  "description": "First Name"
                },
                "Salutation": {
                  "type": "string",
                  "description": "Salutation",
                  "enum": [
                    "Mr.",
                    "Ms.",
                    "Mrs.",
                    "Dr.",
                    "Prof.",
                    "Mx."
                  ]
                },
                "Name": {
                  "type": "string",
                  "description": "Full Name"
                },
                "OtherStreet": {
                  "type": "string",
                  "description": "Other Street"
                },
                "OtherCity": {
                  "type": "string",
                  "description": "Other City"
                },
                "OtherState": {
                  "type": "string",
                  "description": "Other State/Province"
                },
                "OtherPostalCode": {
                  "type": "string",
                  "description": "Other Zip/Postal Code"
                },
                "OtherCountry": {
                  "type": "string",
                  "description": "Other Country"
                },
                "OtherLatitude": {
                  "type": "string",
                  "description": "Other Latitude"
                },
                "OtherLongitude": {
                  "type": "string",
                  "description": "Other Longitude"
                },
                "OtherGeocodeAccuracy": {
                  "type": "string",
                  "description": "Other Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "OtherAddress": {
                  "type": "string",
                  "description": "Other Address"
                },
                "MailingStreet": {
                  "type": "string",
                  "description": "Mailing Street"
                },
                "MailingCity": {
                  "type": "string",
                  "description": "Mailing City"
                },
                "MailingState": {
                  "type": "string",
                  "description": "Mailing State/Province"
                },
                "MailingPostalCode": {
                  "type": "string",
                  "description": "Mailing Zip/Postal Code"
                },
                "MailingCountry": {
                  "type": "string",
                  "description": "Mailing Country"
                },
                "MailingLatitude": {
                  "type": "string",
                  "description": "Mailing Latitude"
                },
                "MailingLongitude": {
                  "type": "string",
                  "description": "Mailing Longitude"
                },
                "MailingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Mailing Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "MailingAddress": {
                  "type": "string",
                  "description": "Mailing Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Business Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Business Fax"
                },
                "MobilePhone": {
                  "type": "string",
                  "description": "Mobile Phone"
                },
                "HomePhone": {
                  "type": "string",
                  "description": "Home Phone"
                },
                "OtherPhone": {
                  "type": "string",
                  "description": "Other Phone"
                },
                "AssistantPhone": {
                  "type": "string",
                  "description": "Asst. Phone"
                },
                "ReportsToId": {
                  "type": "string",
                  "description": "Reports To ID"
                },
                "Email": {
                  "type": "string",
                  "description": "Email"
                },
                "Title": {
                  "type": "string",
                  "description": "Title"
                },
                "Department": {
                  "type": "string",
                  "description": "Department"
                },
                "AssistantName": {
                  "type": "string",
                  "description": "Assistant's Name"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "Birthdate": {
                  "type": "string",
                  "description": "Birthdate"
                },
                "Description": {
                  "type": "string",
                  "description": "Contact Description"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastCURequestDate": {
                  "type": "string",
                  "description": "Last Stay-in-Touch Request Date"
                },
                "LastCUUpdateDate": {
                  "type": "string",
                  "description": "Last Stay-in-Touch Save Date"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "EmailBouncedReason": {
                  "type": "string",
                  "description": "Email Bounced Reason"
                },
                "EmailBouncedDate": {
                  "type": "string",
                  "description": "Email Bounced Date"
                },
                "IsEmailBounced": {
                  "type": "boolean",
                  "description": "Is Email Bounced"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawContactId": {
                  "type": "string",
                  "description": "Jigsaw Contact ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "IndividualId": {
                  "type": "string",
                  "description": "Individual ID"
                },
                "IsPriorityRecord": {
                  "type": "boolean",
                  "description": "Important"
                },
                "ContactSource": {
                  "type": "string",
                  "description": "Creation Source",
                  "enum": [
                    "Auto Create"
                  ]
                },
                "Level__c": {
                  "type": "string",
                  "description": "Level",
                  "enum": [
                    "Secondary",
                    "Tertiary",
                    "Primary"
                  ]
                },
                "Languages__c": {
                  "type": "string",
                  "description": "Languages"
                },
                "BANT__c": {
                  "type": "string",
                  "description": "BANT"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_LEAD",
            "description": "Triggered when a user wants to Update Lead in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Lead ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "LastName": {
                  "type": "string",
                  "description": "Last Name"
                },
                "FirstName": {
                  "type": "string",
                  "description": "First Name"
                },
                "Salutation": {
                  "type": "string",
                  "description": "Salutation",
                  "enum": [
                    "Mr.",
                    "Ms.",
                    "Mrs.",
                    "Dr.",
                    "Prof.",
                    "Mx."
                  ]
                },
                "Name": {
                  "type": "string",
                  "description": "Full Name"
                },
                "Title": {
                  "type": "string",
                  "description": "Title"
                },
                "Company": {
                  "type": "string",
                  "description": "Company"
                },
                "Street": {
                  "type": "string",
                  "description": "Street"
                },
                "City": {
                  "type": "string",
                  "description": "City"
                },
                "State": {
                  "type": "string",
                  "description": "State/Province"
                },
                "PostalCode": {
                  "type": "string",
                  "description": "Zip/Postal Code"
                },
                "Country": {
                  "type": "string",
                  "description": "Country"
                },
                "Latitude": {
                  "type": "string",
                  "description": "Latitude"
                },
                "Longitude": {
                  "type": "string",
                  "description": "Longitude"
                },
                "GeocodeAccuracy": {
                  "type": "string",
                  "description": "Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "Address": {
                  "type": "string",
                  "description": "Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Phone"
                },
                "MobilePhone": {
                  "type": "string",
                  "description": "Mobile Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Fax"
                },
                "Email": {
                  "type": "string",
                  "description": "Email"
                },
                "Website": {
                  "type": "string",
                  "description": "Website"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "Status": {
                  "type": "string",
                  "description": "Status",
                  "enum": [
                    "Open - Not Contacted",
                    "Working - Contacted",
                    "Closed - Converted",
                    "Closed - Not Converted"
                  ]
                },
                "Industry": {
                  "type": "string",
                  "description": "Industry",
                  "enum": [
                    "Agriculture",
                    "Apparel",
                    "Banking",
                    "Biotechnology",
                    "Chemicals",
                    "Communications",
                    "Construction",
                    "Consulting",
                    "Education",
                    "Electronics",
                    "Energy",
                    "Engineering",
                    "Entertainment",
                    "Environmental",
                    "Finance",
                    "Food & Beverage",
                    "Government",
                    "Healthcare",
                    "Hospitality",
                    "Insurance",
                    "Machinery",
                    "Manufacturing",
                    "Media",
                    "Not For Profit",
                    "Recreation",
                    "Retail",
                    "Shipping",
                    "Technology",
                    "Telecommunications",
                    "Transportation",
                    "Utilities",
                    "Other"
                  ]
                },
                "Rating": {
                  "type": "string",
                  "description": "Rating",
                  "enum": [
                    "Hot",
                    "Warm",
                    "Cold"
                  ]
                },
                "AnnualRevenue": {
                  "type": "string",
                  "description": "Annual Revenue"
                },
                "NumberOfEmployees": {
                  "type": "integer",
                  "description": "Employees"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "IsConverted": {
                  "type": "boolean",
                  "description": "Converted"
                },
                "ConvertedDate": {
                  "type": "string",
                  "description": "Converted Date"
                },
                "ConvertedAccountId": {
                  "type": "string",
                  "description": "Converted Account ID"
                },
                "ConvertedContactId": {
                  "type": "string",
                  "description": "Converted Contact ID"
                },
                "ConvertedOpportunityId": {
                  "type": "string",
                  "description": "Converted Opportunity ID"
                },
                "IsUnreadByOwner": {
                  "type": "boolean",
                  "description": "Unread By Owner"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawContactId": {
                  "type": "string",
                  "description": "Jigsaw Contact ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "CompanyDunsNumber": {
                  "type": "string",
                  "description": "Company D-U-N-S Number"
                },
                "DandbCompanyId": {
                  "type": "string",
                  "description": "D&B Company ID"
                },
                "EmailBouncedReason": {
                  "type": "string",
                  "description": "Email Bounced Reason"
                },
                "EmailBouncedDate": {
                  "type": "string",
                  "description": "Email Bounced Date"
                },
                "IndividualId": {
                  "type": "string",
                  "description": "Individual ID"
                },
                "IsPriorityRecord": {
                  "type": "boolean",
                  "description": "Important"
                },
                "SICCode__c": {
                  "type": "string",
                  "description": "SIC Code"
                },
                "ProductInterest__c": {
                  "type": "string",
                  "description": "Product Interest",
                  "enum": [
                    "GC1000 series",
                    "GC5000 series",
                    "GC3000 series"
                  ]
                },
                "Primary__c": {
                  "type": "string",
                  "description": "Primary",
                  "enum": [
                    "No",
                    "Yes"
                  ]
                },
                "CurrentGenerators__c": {
                  "type": "string",
                  "description": "Current Generator(s)"
                },
                "NumberofLocations__c": {
                  "type": "string",
                  "description": "Number of Locations"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_OPPORTUNITY",
            "description": "Triggered when a user wants to Update Opportunity in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Opportunity ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsPrivate": {
                  "type": "boolean",
                  "description": "Private"
                },
                "Name": {
                  "type": "string",
                  "description": "Name"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "StageName": {
                  "type": "string",
                  "description": "Stage",
                  "enum": [
                    "Prospecting",
                    "Qualification",
                    "Needs Analysis",
                    "Value Proposition",
                    "Id. Decision Makers",
                    "Perception Analysis",
                    "Proposal/Price Quote",
                    "Negotiation/Review",
                    "Closed Won",
                    "Closed Lost"
                  ]
                },
                "Amount": {
                  "type": "string",
                  "description": "Amount"
                },
                "Probability": {
                  "type": "string",
                  "description": "Probability (%)"
                },
                "ExpectedRevenue": {
                  "type": "string",
                  "description": "Expected Amount"
                },
                "TotalOpportunityQuantity": {
                  "type": "string",
                  "description": "Quantity"
                },
                "CloseDate": {
                  "type": "string",
                  "description": "Close Date"
                },
                "Type": {
                  "type": "string",
                  "description": "Opportunity Type",
                  "enum": [
                    "Existing Customer - Upgrade",
                    "Existing Customer - Replacement",
                    "Existing Customer - Downgrade",
                    "New Customer"
                  ]
                },
                "NextStep": {
                  "type": "string",
                  "description": "Next Step"
                },
                "LeadSource": {
                  "type": "string",
                  "description": "Lead Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "IsClosed": {
                  "type": "boolean",
                  "description": "Closed"
                },
                "IsWon": {
                  "type": "boolean",
                  "description": "Won"
                },
                "ForecastCategory": {
                  "type": "string",
                  "description": "Forecast Category",
                  "enum": [
                    "Omitted",
                    "Pipeline",
                    "BestCase",
                    "MostLikely",
                    "Forecast",
                    "Closed"
                  ]
                },
                "ForecastCategoryName": {
                  "type": "string",
                  "description": "Forecast Category",
                  "enum": [
                    "Omitted",
                    "Pipeline",
                    "Best Case",
                    "Commit",
                    "Closed"
                  ]
                },
                "CampaignId": {
                  "type": "string",
                  "description": "Campaign ID"
                },
                "HasOpportunityLineItem": {
                  "type": "boolean",
                  "description": "Has Line Item"
                },
                "Pricebook2Id": {
                  "type": "string",
                  "description": "Price Book ID"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "PushCount": {
                  "type": "integer",
                  "description": "Push Count"
                },
                "LastStageChangeDate": {
                  "type": "string",
                  "description": "Last Stage Change Date"
                },
                "FiscalQuarter": {
                  "type": "integer",
                  "description": "Fiscal Quarter"
                },
                "FiscalYear": {
                  "type": "integer",
                  "description": "Fiscal Year"
                },
                "Fiscal": {
                  "type": "string",
                  "description": "Fiscal Period"
                },
                "ContactId": {
                  "type": "string",
                  "description": "Contact ID"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "HasOpenActivity": {
                  "type": "boolean",
                  "description": "Has Open Activity"
                },
                "HasOverdueTask": {
                  "type": "boolean",
                  "description": "Has Overdue Task"
                },
                "LastAmountChangedHistoryId": {
                  "type": "string",
                  "description": "Opportunity History ID"
                },
                "LastCloseDateChangedHistoryId": {
                  "type": "string",
                  "description": "Opportunity History ID"
                },
                "DeliveryInstallationStatus__c": {
                  "type": "string",
                  "description": "Delivery/Installation Status",
                  "enum": [
                    "In progress",
                    "Yet to begin",
                    "Completed"
                  ]
                },
                "TrackingNumber__c": {
                  "type": "string",
                  "description": "Tracking Number"
                },
                "OrderNumber__c": {
                  "type": "string",
                  "description": "Order Number"
                },
                "CurrentGenerators__c": {
                  "type": "string",
                  "description": "Current Generator(s)"
                },
                "MainCompetitors__c": {
                  "type": "string",
                  "description": "Main Competitor(s)"
                },
                "Budget__c": {
                  "type": "string",
                  "description": "Budget"
                },
                "Authority__c": {
                  "type": "string",
                  "description": "Authority"
                },
                "Need__c": {
                  "type": "string",
                  "description": "Need"
                },
                "Timing__c": {
                  "type": "string",
                  "description": "Timing"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_TASK",
            "description": "Triggered when a user wants to Update Task in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Activity ID"
                },
                "WhoId": {
                  "type": "string",
                  "description": "Name ID"
                },
                "WhatId": {
                  "type": "string",
                  "description": "Related To ID"
                },
                "Subject": {
                  "type": "string",
                  "description": "Subject"
                },
                "ActivityDate": {
                  "type": "string",
                  "description": "Due Date Only"
                },
                "Status": {
                  "type": "string",
                  "description": "Status",
                  "enum": [
                    "Not Started",
                    "In Progress",
                    "Completed",
                    "Waiting on someone else",
                    "Deferred"
                  ]
                },
                "Priority": {
                  "type": "string",
                  "description": "Priority",
                  "enum": [
                    "High",
                    "Normal",
                    "Low"
                  ]
                },
                "IsHighPriority": {
                  "type": "boolean",
                  "description": "High Priority"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Assigned To ID"
                },
                "Description": {
                  "type": "string",
                  "description": "Description"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "AccountId": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsClosed": {
                  "type": "boolean",
                  "description": "Closed"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "IsArchived": {
                  "type": "boolean",
                  "description": "Archived"
                },
                "CallDurationInSeconds": {
                  "type": "integer",
                  "description": "Call Duration"
                },
                "CallType": {
                  "type": "string",
                  "description": "Call Type",
                  "enum": [
                    "Internal",
                    "Inbound",
                    "Outbound"
                  ]
                },
                "CallDisposition": {
                  "type": "string",
                  "description": "Call Result"
                },
                "CallObject": {
                  "type": "string",
                  "description": "Call Object Identifier"
                },
                "ReminderDateTime": {
                  "type": "string",
                  "description": "Reminder Date/Time"
                },
                "IsReminderSet": {
                  "type": "boolean",
                  "description": "Reminder Set"
                },
                "RecurrenceActivityId": {
                  "type": "string",
                  "description": "Recurrence Activity ID"
                },
                "IsRecurrence": {
                  "type": "boolean",
                  "description": "Create Recurring Series of Tasks"
                },
                "RecurrenceStartDateOnly": {
                  "type": "string",
                  "description": "Recurrence Start"
                },
                "RecurrenceEndDateOnly": {
                  "type": "string",
                  "description": "Recurrence End"
                },
                "RecurrenceTimeZoneSidKey": {
                  "type": "string",
                  "description": "Recurrence Time Zone",
                  "enum": [
                    "Pacific/Kiritimati",
                    "Pacific/Chatham",
                    "Antarctica/McMurdo",
                    "Pacific/Apia",
                    "Pacific/Auckland",
                    "Pacific/Enderbury",
                    "Pacific/Fakaofo",
                    "Pacific/Tongatapu",
                    "Asia/Anadyr",
                    "Asia/Kamchatka",
                    "Pacific/Fiji",
                    "Pacific/Funafuti",
                    "Pacific/Kwajalein",
                    "Pacific/Majuro",
                    "Pacific/Nauru",
                    "Pacific/Norfolk",
                    "Pacific/Tarawa",
                    "Pacific/Wake",
                    "Pacific/Wallis",
                    "Antarctica/Macquarie",
                    "Asia/Magadan",
                    "Asia/Sakhalin",
                    "Asia/Srednekolymsk",
                    "Australia/Currie",
                    "Australia/Hobart",
                    "Australia/Lord_Howe",
                    "Australia/Melbourne",
                    "Australia/Sydney",
                    "Pacific/Bougainville",
                    "Pacific/Efate",
                    "Pacific/Guadalcanal",
                    "Pacific/Kosrae",
                    "Pacific/Noumea",
                    "Pacific/Ponape",
                    "Australia/Adelaide",
                    "Australia/Broken_Hill",
                    "Antarctica/DumontDUrville",
                    "Asia/Ust-Nera",
                    "Asia/Vladivostok",
                    "Australia/Brisbane",
                    "Australia/Lindeman",
                    "Pacific/Guam",
                    "Pacific/Port_Moresby",
                    "Pacific/Saipan",
                    "Pacific/Truk",
                    "Australia/Darwin",
                    "Asia/Chita",
                    "Asia/Dili",
                    "Asia/Jayapura",
                    "Asia/Khandyga",
                    "Asia/Seoul",
                    "Asia/Tokyo",
                    "Asia/Yakutsk",
                    "Pacific/Palau",
                    "Australia/Eucla",
                    "Antarctica/Casey",
                    "Asia/Brunei",
                    "Asia/Choibalsan",
                    "Asia/Hong_Kong",
                    "Asia/Irkutsk",
                    "Asia/Kuala_Lumpur",
                    "Asia/Kuching",
                    "Asia/Macau",
                    "Asia/Makassar",
                    "Asia/Manila",
                    "Asia/Shanghai",
                    "Asia/Singapore",
                    "Asia/Taipei",
                    "Asia/Ulaanbaatar",
                    "Australia/Perth",
                    "Antarctica/Davis",
                    "Asia/Bangkok",
                    "Asia/Barnaul",
                    "Asia/Ho_Chi_Minh",
                    "Asia/Hovd",
                    "Asia/Jakarta",
                    "Asia/Krasnoyarsk",
                    "Asia/Novokuznetsk",
                    "Asia/Novosibirsk",
                    "Asia/Phnom_Penh",
                    "Asia/Pontianak",
                    "Asia/Tomsk",
                    "Asia/Vientiane",
                    "Indian/Christmas",
                    "Asia/Rangoon",
                    "Indian/Cocos",
                    "Asia/Bishkek",
                    "Asia/Dhaka",
                    "Asia/Omsk",
                    "Asia/Thimphu",
                    "Asia/Urumqi",
                    "Indian/Chagos",
                    "Asia/Kathmandu",
                    "Asia/Colombo",
                    "Asia/Kolkata",
                    "Antarctica/Mawson",
                    "Antarctica/Vostok",
                    "Asia/Almaty",
                    "Asia/Aqtau",
                    "Asia/Aqtobe",
                    "Asia/Ashgabat",
                    "Asia/Atyrau",
                    "Asia/Dushanbe",
                    "Asia/Karachi",
                    "Asia/Oral",
                    "Asia/Qostanay",
                    "Asia/Qyzylorda",
                    "Asia/Samarkand",
                    "Asia/Tashkent",
                    "Asia/Yekaterinburg",
                    "Indian/Kerguelen",
                    "Indian/Maldives",
                    "Asia/Kabul",
                    "Asia/Baku",
                    "Asia/Dubai",
                    "Asia/Muscat",
                    "Asia/Tbilisi",
                    "Asia/Yerevan",
                    "Europe/Astrakhan",
                    "Europe/Samara",
                    "Europe/Saratov",
                    "Europe/Ulyanovsk",
                    "Indian/Mahe",
                    "Indian/Mauritius",
                    "Indian/Reunion",
                    "Africa/Addis_Ababa",
                    "Africa/Asmera",
                    "Africa/Dar_es_Salaam",
                    "Africa/Djibouti",
                    "Africa/Kampala",
                    "Africa/Mogadishu",
                    "Africa/Nairobi",
                    "Antarctica/Syowa",
                    "Asia/Aden",
                    "Asia/Amman",
                    "Asia/Baghdad",
                    "Asia/Bahrain",
                    "Asia/Kuwait",
                    "Asia/Qatar",
                    "Asia/Riyadh",
                    "Europe/Istanbul",
                    "Europe/Kirov",
                    "Europe/Minsk",
                    "Europe/Moscow",
                    "Europe/Volgograd",
                    "Indian/Antananarivo",
                    "Indian/Comoro",
                    "Indian/Mayotte",
                    "Africa/Blantyre",
                    "Africa/Bujumbura",
                    "Africa/Cairo",
                    "Africa/Gaborone",
                    "Africa/Harare",
                    "Africa/Johannesburg",
                    "Africa/Juba",
                    "Africa/Khartoum",
                    "Africa/Kigali",
                    "Africa/Lubumbashi",
                    "Africa/Lusaka",
                    "Africa/Maputo",
                    "Africa/Maseru",
                    "Africa/Mbabane",
                    "Africa/Tripoli",
                    "Africa/Windhoek",
                    "Asia/Beirut",
                    "Asia/Famagusta",
                    "Asia/Gaza",
                    "Asia/Hebron",
                    "Asia/Jerusalem",
                    "Asia/Nicosia",
                    "Europe/Athens",
                    "Europe/Bucharest",
                    "Europe/Chisinau",
                    "Europe/Helsinki",
                    "Europe/Kaliningrad",
                    "Europe/Kiev",
                    "Europe/Mariehamn",
                    "Europe/Riga",
                    "Europe/Sofia",
                    "Europe/Tallinn",
                    "Europe/Uzhgorod",
                    "Europe/Vilnius",
                    "Europe/Zaporozhye",
                    "Africa/Algiers",
                    "Africa/Bangui",
                    "Africa/Brazzaville",
                    "Africa/Ceuta",
                    "Africa/Douala",
                    "Africa/Kinshasa",
                    "Africa/Lagos",
                    "Africa/Libreville",
                    "Africa/Luanda",
                    "Africa/Malabo",
                    "Africa/Ndjamena",
                    "Africa/Niamey",
                    "Africa/Porto-Novo",
                    "Africa/Tunis",
                    "Arctic/Longyearbyen",
                    "Europe/Amsterdam",
                    "Europe/Andorra",
                    "Europe/Belgrade",
                    "Europe/Berlin",
                    "Europe/Bratislava",
                    "Europe/Brussels",
                    "Europe/Budapest",
                    "Europe/Busingen",
                    "Europe/Copenhagen",
                    "Europe/Gibraltar",
                    "Europe/Ljubljana",
                    "Europe/Luxembourg",
                    "Europe/Madrid",
                    "Europe/Malta",
                    "Europe/Monaco",
                    "Europe/Oslo",
                    "Europe/Paris",
                    "Europe/Podgorica",
                    "Europe/Prague",
                    "Europe/Rome",
                    "Europe/San_Marino",
                    "Europe/Sarajevo",
                    "Europe/Skopje",
                    "Europe/Stockholm",
                    "Europe/Tirane",
                    "Europe/Vaduz",
                    "Europe/Vatican",
                    "Europe/Vienna",
                    "Europe/Warsaw",
                    "Europe/Zagreb",
                    "Europe/Zurich",
                    "Africa/Abidjan",
                    "Africa/Accra",
                    "Africa/Bamako",
                    "Africa/Banjul",
                    "Africa/Bissau",
                    "Africa/Casablanca",
                    "Africa/Conakry",
                    "Africa/Dakar",
                    "Africa/El_Aaiun",
                    "Africa/Freetown",
                    "Africa/Lome",
                    "Africa/Monrovia",
                    "Africa/Nouakchott",
                    "Africa/Ouagadougou",
                    "Africa/Sao_Tome",
                    "America/Danmarkshavn",
                    "Antarctica/Troll",
                    "Atlantic/Canary",
                    "Atlantic/Faeroe",
                    "Atlantic/Madeira",
                    "Atlantic/Reykjavik",
                    "Atlantic/St_Helena",
                    "Europe/Dublin",
                    "Europe/Guernsey",
                    "Europe/Isle_of_Man",
                    "Europe/Jersey",
                    "Europe/Lisbon",
                    "Europe/London",
                    "GMT",
                    "Atlantic/Azores",
                    "Atlantic/Cape_Verde",
                    "America/Godthab",
                    "America/Noronha",
                    "America/Scoresbysund",
                    "Atlantic/South_Georgia",
                    "America/Araguaina",
                    "America/Argentina/Buenos_Aires",
                    "America/Argentina/La_Rioja",
                    "America/Argentina/Rio_Gallegos",
                    "America/Argentina/Salta",
                    "America/Argentina/San_Juan",
                    "America/Argentina/San_Luis",
                    "America/Argentina/Tucuman",
                    "America/Argentina/Ushuaia",
                    "America/Asuncion",
                    "America/Bahia",
                    "America/Belem",
                    "America/Catamarca",
                    "America/Cayenne",
                    "America/Cordoba",
                    "America/Fortaleza",
                    "America/Jujuy",
                    "America/Maceio",
                    "America/Mendoza",
                    "America/Miquelon",
                    "America/Montevideo",
                    "America/Paramaribo",
                    "America/Punta_Arenas",
                    "America/Recife",
                    "America/Santarem",
                    "America/Santiago",
                    "America/Sao_Paulo",
                    "Antarctica/Palmer",
                    "Antarctica/Rothera",
                    "Atlantic/Stanley",
                    "America/St_Johns",
                    "America/Anguilla",
                    "America/Antigua",
                    "America/Aruba",
                    "America/Barbados",
                    "America/Blanc-Sablon",
                    "America/Boa_Vista",
                    "America/Campo_Grande",
                    "America/Caracas",
                    "America/Cuiaba",
                    "America/Curacao",
                    "America/Dominica",
                    "America/Glace_Bay",
                    "America/Goose_Bay",
                    "America/Grenada",
                    "America/Guadeloupe",
                    "America/Guyana",
                    "America/Halifax",
                    "America/Kralendijk",
                    "America/La_Paz",
                    "America/Lower_Princes",
                    "America/Manaus",
                    "America/Marigot",
                    "America/Martinique",
                    "America/Moncton",
                    "America/Montserrat",
                    "America/Port_of_Spain",
                    "America/Porto_Velho",
                    "America/Puerto_Rico",
                    "America/Santo_Domingo",
                    "America/St_Barthelemy",
                    "America/St_Kitts",
                    "America/St_Lucia",
                    "America/St_Thomas",
                    "America/St_Vincent",
                    "America/Thule",
                    "America/Tortola",
                    "Atlantic/Bermuda",
                    "America/Bogota",
                    "America/Cancun",
                    "America/Cayman",
                    "America/Coral_Harbour",
                    "America/Detroit",
                    "America/Eirunepe",
                    "America/Grand_Turk",
                    "America/Guayaquil",
                    "America/Indiana/Indianapolis",
                    "America/Indiana/Marengo",
                    "America/Indiana/Petersburg",
                    "America/Indiana/Vevay",
                    "America/Indiana/Vincennes",
                    "America/Indiana/Winamac",
                    "America/Iqaluit",
                    "America/Jamaica",
                    "America/Kentucky/Monticello",
                    "America/Lima",
                    "America/Louisville",
                    "America/Montreal",
                    "America/Nassau",
                    "America/New_York",
                    "America/Nipigon",
                    "America/Panama",
                    "America/Pangnirtung",
                    "America/Port-au-Prince",
                    "America/Rio_Branco",
                    "America/Thunder_Bay",
                    "America/Toronto",
                    "Pacific/Easter",
                    "America/Bahia_Banderas",
                    "America/Belize",
                    "America/Chicago",
                    "America/Chihuahua",
                    "America/Costa_Rica",
                    "America/El_Salvador",
                    "America/Guatemala",
                    "America/Indiana/Knox",
                    "America/Indiana/Tell_City",
                    "America/Managua",
                    "America/Matamoros",
                    "America/Menominee",
                    "America/Merida",
                    "America/Mexico_City",
                    "America/Monterrey",
                    "America/North_Dakota/Beulah",
                    "America/North_Dakota/Center",
                    "America/North_Dakota/New_Salem",
                    "America/Ojinaga",
                    "America/Rainy_River",
                    "America/Rankin_Inlet",
                    "America/Regina",
                    "America/Resolute",
                    "America/Swift_Current",
                    "America/Tegucigalpa",
                    "America/Winnipeg",
                    "Pacific/Galapagos",
                    "America/Boise",
                    "America/Cambridge_Bay",
                    "America/Creston",
                    "America/Dawson",
                    "America/Dawson_Creek",
                    "America/Denver",
                    "America/Edmonton",
                    "America/Fort_Nelson",
                    "America/Hermosillo",
                    "America/Inuvik",
                    "America/Mazatlan",
                    "America/Phoenix",
                    "America/Whitehorse",
                    "America/Yellowknife",
                    "America/Los_Angeles",
                    "America/Santa_Isabel",
                    "America/Tijuana",
                    "America/Vancouver",
                    "Pacific/Pitcairn",
                    "America/Anchorage",
                    "America/Juneau",
                    "America/Metlakatla",
                    "America/Nome",
                    "America/Sitka",
                    "America/Yakutat",
                    "Pacific/Gambier",
                    "Pacific/Marquesas",
                    "America/Adak",
                    "Pacific/Honolulu",
                    "Pacific/Johnston",
                    "Pacific/Rarotonga",
                    "Pacific/Tahiti",
                    "Pacific/Midway",
                    "Pacific/Niue",
                    "Pacific/Pago_Pago"
                  ]
                },
                "RecurrenceType": {
                  "type": "string",
                  "description": "Recurrence Type",
                  "enum": [
                    "RecursDaily",
                    "RecursEveryWeekday",
                    "RecursMonthly",
                    "RecursMonthlyNth",
                    "RecursWeekly",
                    "RecursYearly",
                    "RecursYearlyNth"
                  ]
                },
                "RecurrenceInterval": {
                  "type": "integer",
                  "description": "Recurrence Interval"
                },
                "RecurrenceDayOfWeekMask": {
                  "type": "integer",
                  "description": "Recurrence Day of Week Mask"
                },
                "RecurrenceDayOfMonth": {
                  "type": "integer",
                  "description": "Recurrence Day of Month"
                },
                "RecurrenceInstance": {
                  "type": "string",
                  "description": "Recurrence Instance",
                  "enum": [
                    "First",
                    "Second",
                    "Third",
                    "Fourth",
                    "Last"
                  ]
                },
                "RecurrenceMonthOfYear": {
                  "type": "string",
                  "description": "Recurrence Month of Year",
                  "enum": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                },
                "RecurrenceRegeneratedType": {
                  "type": "string",
                  "description": "Repeat This Task",
                  "enum": [
                    "RecurrenceRegenerateAfterDueDate",
                    "RecurrenceRegenerateAfterToday",
                    "RecurrenceRegenerated"
                  ]
                },
                "TaskSubtype": {
                  "type": "string",
                  "description": "Task Subtype",
                  "enum": [
                    "Task",
                    "Email",
                    "ListEmail",
                    "Cadence",
                    "Call",
                    "LinkedIn"
                  ]
                },
                "CompletedDateTime": {
                  "type": "string",
                  "description": "Completed Date/Time"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_ACCOUNT",
            "description": "Triggered when a user wants to Update Account in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Account ID"
                },
                "IsDeleted": {
                  "type": "boolean",
                  "description": "Deleted"
                },
                "MasterRecordId": {
                  "type": "string",
                  "description": "Master Record ID"
                },
                "Name": {
                  "type": "string",
                  "description": "Account Name"
                },
                "Type": {
                  "type": "string",
                  "description": "Account Type",
                  "enum": [
                    "Prospect",
                    "Customer - Direct",
                    "Customer - Channel",
                    "Channel Partner / Reseller",
                    "Installation Partner",
                    "Technology Partner",
                    "Other"
                  ]
                },
                "ParentId": {
                  "type": "string",
                  "description": "Parent Account ID"
                },
                "BillingStreet": {
                  "type": "string",
                  "description": "Billing Street"
                },
                "BillingCity": {
                  "type": "string",
                  "description": "Billing City"
                },
                "BillingState": {
                  "type": "string",
                  "description": "Billing State/Province"
                },
                "BillingPostalCode": {
                  "type": "string",
                  "description": "Billing Zip/Postal Code"
                },
                "BillingCountry": {
                  "type": "string",
                  "description": "Billing Country"
                },
                "BillingLatitude": {
                  "type": "string",
                  "description": "Billing Latitude"
                },
                "BillingLongitude": {
                  "type": "string",
                  "description": "Billing Longitude"
                },
                "BillingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Billing Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "BillingAddress": {
                  "type": "string",
                  "description": "Billing Address"
                },
                "ShippingStreet": {
                  "type": "string",
                  "description": "Shipping Street"
                },
                "ShippingCity": {
                  "type": "string",
                  "description": "Shipping City"
                },
                "ShippingState": {
                  "type": "string",
                  "description": "Shipping State/Province"
                },
                "ShippingPostalCode": {
                  "type": "string",
                  "description": "Shipping Zip/Postal Code"
                },
                "ShippingCountry": {
                  "type": "string",
                  "description": "Shipping Country"
                },
                "ShippingLatitude": {
                  "type": "string",
                  "description": "Shipping Latitude"
                },
                "ShippingLongitude": {
                  "type": "string",
                  "description": "Shipping Longitude"
                },
                "ShippingGeocodeAccuracy": {
                  "type": "string",
                  "description": "Shipping Geocode Accuracy",
                  "enum": [
                    "Address",
                    "NearAddress",
                    "Block",
                    "Street",
                    "ExtendedZip",
                    "Zip",
                    "Neighborhood",
                    "City",
                    "County",
                    "State",
                    "Unknown"
                  ]
                },
                "ShippingAddress": {
                  "type": "string",
                  "description": "Shipping Address"
                },
                "Phone": {
                  "type": "string",
                  "description": "Account Phone"
                },
                "Fax": {
                  "type": "string",
                  "description": "Account Fax"
                },
                "AccountNumber": {
                  "type": "string",
                  "description": "Account Number"
                },
                "Website": {
                  "type": "string",
                  "description": "Website"
                },
                "PhotoUrl": {
                  "type": "string",
                  "description": "Photo URL"
                },
                "Sic": {
                  "type": "string",
                  "description": "SIC Code"
                },
                "Industry": {
                  "type": "string",
                  "description": "Industry",
                  "enum": [
                    "Agriculture",
                    "Apparel",
                    "Banking",
                    "Biotechnology",
                    "Chemicals",
                    "Communications",
                    "Construction",
                    "Consulting",
                    "Education",
                    "Electronics",
                    "Energy",
                    "Engineering",
                    "Entertainment",
                    "Environmental",
                    "Finance",
                    "Food & Beverage",
                    "Government",
                    "Healthcare",
                    "Hospitality",
                    "Insurance",
                    "Machinery",
                    "Manufacturing",
                    "Media",
                    "Not For Profit",
                    "Recreation",
                    "Retail",
                    "Shipping",
                    "Technology",
                    "Telecommunications",
                    "Transportation",
                    "Utilities",
                    "Other"
                  ]
                },
                "AnnualRevenue": {
                  "type": "string",
                  "description": "Annual Revenue"
                },
                "NumberOfEmployees": {
                  "type": "integer",
                  "description": "Employees"
                },
                "Ownership": {
                  "type": "string",
                  "description": "Ownership",
                  "enum": [
                    "Public",
                    "Private",
                    "Subsidiary",
                    "Other"
                  ]
                },
                "TickerSymbol": {
                  "type": "string",
                  "description": "Ticker Symbol"
                },
                "Description": {
                  "type": "string",
                  "description": "Account Description"
                },
                "Rating": {
                  "type": "string",
                  "description": "Account Rating",
                  "enum": [
                    "Hot",
                    "Warm",
                    "Cold"
                  ]
                },
                "Site": {
                  "type": "string",
                  "description": "Account Site"
                },
                "OwnerId": {
                  "type": "string",
                  "description": "Owner ID"
                },
                "CreatedDate": {
                  "type": "string",
                  "description": "Created Date"
                },
                "CreatedById": {
                  "type": "string",
                  "description": "Created By ID"
                },
                "LastModifiedDate": {
                  "type": "string",
                  "description": "Last Modified Date"
                },
                "LastModifiedById": {
                  "type": "string",
                  "description": "Last Modified By ID"
                },
                "SystemModstamp": {
                  "type": "string",
                  "description": "System Modstamp"
                },
                "LastActivityDate": {
                  "type": "string",
                  "description": "Last Activity"
                },
                "LastViewedDate": {
                  "type": "string",
                  "description": "Last Viewed Date"
                },
                "LastReferencedDate": {
                  "type": "string",
                  "description": "Last Referenced Date"
                },
                "Jigsaw": {
                  "type": "string",
                  "description": "Data.com Key"
                },
                "JigsawCompanyId": {
                  "type": "string",
                  "description": "Jigsaw Company ID"
                },
                "CleanStatus": {
                  "type": "string",
                  "description": "Clean Status",
                  "enum": [
                    "Matched",
                    "Different",
                    "Acknowledged",
                    "NotFound",
                    "Inactive",
                    "Pending",
                    "SelectMatch",
                    "Skipped"
                  ]
                },
                "AccountSource": {
                  "type": "string",
                  "description": "Account Source",
                  "enum": [
                    "Web",
                    "Phone Inquiry",
                    "Partner Referral",
                    "Purchased List",
                    "Other"
                  ]
                },
                "DunsNumber": {
                  "type": "string",
                  "description": "D-U-N-S Number"
                },
                "Tradestyle": {
                  "type": "string",
                  "description": "Tradestyle"
                },
                "NaicsCode": {
                  "type": "string",
                  "description": "NAICS Code"
                },
                "NaicsDesc": {
                  "type": "string",
                  "description": "NAICS Description"
                },
                "YearStarted": {
                  "type": "string",
                  "description": "Year Started"
                },
                "SicDesc": {
                  "type": "string",
                  "description": "SIC Description"
                },
                "DandbCompanyId": {
                  "type": "string",
                  "description": "D&B Company ID"
                },
                "OperatingHoursId": {
                  "type": "string",
                  "description": "Operating Hour ID"
                },
                "CustomerPriority__c": {
                  "type": "string",
                  "description": "Customer Priority",
                  "enum": [
                    "High",
                    "Low",
                    "Medium"
                  ]
                },
                "SLA__c": {
                  "type": "string",
                  "description": "SLA",
                  "enum": [
                    "Gold",
                    "Silver",
                    "Platinum",
                    "Bronze"
                  ]
                },
                "Active__c": {
                  "type": "string",
                  "description": "Active",
                  "enum": [
                    "No",
                    "Yes"
                  ]
                },
                "NumberofLocations__c": {
                  "type": "string",
                  "description": "Number of Locations"
                },
                "UpsellOpportunity__c": {
                  "type": "string",
                  "description": "Upsell Opportunity",
                  "enum": [
                    "Maybe",
                    "No",
                    "Yes"
                  ]
                },
                "SLASerialNumber__c": {
                  "type": "string",
                  "description": "SLA Serial Number"
                },
                "SLAExpirationDate__c": {
                  "type": "string",
                  "description": "SLA Expiration Date"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_UPDATE_RECORD_ANY",
            "description": "Triggered when a user wants to Update Any an unknown object typein Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record Id"
                }
              },
              "required": [
                "recordType",
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_CONTACT",
            "description": "Triggered when a user wants to Get Contact by Id in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_LEAD",
            "description": "Triggered when a user wants to Get Lead by Id in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_OPPORTUNITY",
            "description": "Triggered when a user wants to Get Opportunity by Id in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_TASK",
            "description": "Triggered when a user wants to Get Task by Id in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_ACCOUNT",
            "description": "Triggered when a user wants to Get Account by Id in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_ID_ANY",
            "description": "Triggered when a user wants to Get Any by Id an unknown object typein Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                },
                "recordId": {
                  "type": "string",
                  "description": "Record ID"
                }
              },
              "required": [
                "recordType",
                "recordId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_CONTACT",
            "description": "Triggered when a user wants to Search Contact in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "filterFormula": {
                  "type": "string",
                  "description": "Filter search : Search for records that match specified filters."
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_LEAD",
            "description": "Triggered when a user wants to Search Lead in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "filterFormula": {
                  "type": "string",
                  "description": "Filter search : Search for records that match specified filters."
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_OPPORTUNITY",
            "description": "Triggered when a user wants to Search Opportunity in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "filterFormula": {
                  "type": "string",
                  "description": "Filter search : Search for records that match specified filters."
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_TASK",
            "description": "Triggered when a user wants to Search Task in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "filterFormula": {
                  "type": "string",
                  "description": "Filter search : Search for records that match specified filters."
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_ACCOUNT",
            "description": "Triggered when a user wants to Search Account in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "filterFormula": {
                  "type": "string",
                  "description": "Filter search : Search for records that match specified filters."
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_SEARCH_RECORDS_ANY",
            "description": "Triggered when a user wants to Search Any an unknown object typein Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                },
                "filterFormula": {
                  "type": "string",
                  "description": "Filter Search"
                },
                "includeAllFields": {
                  "type": "boolean",
                  "description": "Include All Fields"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "recordType"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_CONTACT",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_LEAD",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_OPPORTUNITY",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_TASK",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_ACCOUNT",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_GET_RECORD_BY_VIEW_ID_ANY",
            "description": "Get Records By List View Id",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                },
                "listViewId": {
                  "type": "string",
                  "description": "List View ID"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination parameters for paginated results",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "The cursor indicating the current page"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "recordType",
                "listViewId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_CONTACT",
            "description": "Triggered when a user wants to Deploy Contact Custom Fields in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Field Label : Enter a label to be used on displays, page layouts, reports, and list views. Also determines the Field Name used for internal reference. For example, if the Field Label is “Email”, the Field Name will be “Email__c”."
                },
                "type": {
                  "type": "string",
                  "description": "Field Type",
                  "enum": [
                    "Checkbox",
                    "Currency",
                    "Date",
                    "Email",
                    "Number",
                    "Percent",
                    "Phone",
                    "Picklist",
                    "MultiselectPicklist",
                    "Text",
                    "TextArea",
                    "LongTextArea",
                    "Html",
                    "Time",
                    "Url"
                  ]
                },
                "defaultCheckboxValue": {
                  "type": "boolean",
                  "description": "Default Value \nThis field appears only when 'type' = 'Checkbox')"
                },
                "length": {
                  "type": "string",
                  "description": "Length : Number of digits to the left of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent') \nThis field appears only when 'type' = 'Currency', 'Text') \nThis field appears only when 'type' = 'Currency', 'LongTextArea') \nThis field appears only when 'type' = 'Currency', 'Html')"
                },
                "decimalPlace": {
                  "type": "string",
                  "description": "Decimal Places : Number of digits to the right of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent')"
                },
                "pickListValues": {
                  "type": "string",
                  "description": "Values : Enter values, with each value separated by a new line \nThis field appears only when 'type' = 'Picklist') \nThis field appears only when 'type' = 'Picklist', 'MultiselectPicklist')"
                },
                "visibleLines": {
                  "type": "string",
                  "description": "Visible Lines \nThis field appears only when 'type' = 'MultiselectPicklist') \nThis field appears only when 'type' = 'MultiselectPicklist', 'LongTextArea') \nThis field appears only when 'type' = 'MultiselectPicklist', 'Html')"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "helperText": {
                  "type": "string",
                  "description": "Helper Text : This text displays on detail and edit pages when users hover over the Info icon next to this field."
                },
                "defaultFieldValue": {
                  "type": "string",
                  "description": "Default Value"
                }
              },
              "required": [
                "label",
                "type",
                "length",
                "decimalPlace",
                "pickListValues",
                "visibleLines"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_LEAD",
            "description": "Triggered when a user wants to Deploy Lead Custom Fields in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Field Label : Enter a label to be used on displays, page layouts, reports, and list views. Also determines the Field Name used for internal reference. For example, if the Field Label is “Email”, the Field Name will be “Email__c”."
                },
                "type": {
                  "type": "string",
                  "description": "Field Type",
                  "enum": [
                    "Checkbox",
                    "Currency",
                    "Date",
                    "Email",
                    "Number",
                    "Percent",
                    "Phone",
                    "Picklist",
                    "MultiselectPicklist",
                    "Text",
                    "TextArea",
                    "LongTextArea",
                    "Html",
                    "Time",
                    "Url"
                  ]
                },
                "defaultCheckboxValue": {
                  "type": "boolean",
                  "description": "Default Value \nThis field appears only when 'type' = 'Checkbox')"
                },
                "length": {
                  "type": "string",
                  "description": "Length : Number of digits to the left of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent') \nThis field appears only when 'type' = 'Currency', 'Text') \nThis field appears only when 'type' = 'Currency', 'LongTextArea') \nThis field appears only when 'type' = 'Currency', 'Html')"
                },
                "decimalPlace": {
                  "type": "string",
                  "description": "Decimal Places : Number of digits to the right of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent')"
                },
                "pickListValues": {
                  "type": "string",
                  "description": "Values : Enter values, with each value separated by a new line \nThis field appears only when 'type' = 'Picklist') \nThis field appears only when 'type' = 'Picklist', 'MultiselectPicklist')"
                },
                "visibleLines": {
                  "type": "string",
                  "description": "Visible Lines \nThis field appears only when 'type' = 'MultiselectPicklist') \nThis field appears only when 'type' = 'MultiselectPicklist', 'LongTextArea') \nThis field appears only when 'type' = 'MultiselectPicklist', 'Html')"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "helperText": {
                  "type": "string",
                  "description": "Helper Text : This text displays on detail and edit pages when users hover over the Info icon next to this field."
                },
                "defaultFieldValue": {
                  "type": "string",
                  "description": "Default Value"
                }
              },
              "required": [
                "label",
                "type",
                "length",
                "decimalPlace",
                "pickListValues",
                "visibleLines"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_OPPORTUNITY",
            "description": "Triggered when a user wants to Deploy Opportunity Custom Fields in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Field Label : Enter a label to be used on displays, page layouts, reports, and list views. Also determines the Field Name used for internal reference. For example, if the Field Label is “Email”, the Field Name will be “Email__c”."
                },
                "type": {
                  "type": "string",
                  "description": "Field Type",
                  "enum": [
                    "Checkbox",
                    "Currency",
                    "Date",
                    "Email",
                    "Number",
                    "Percent",
                    "Phone",
                    "Picklist",
                    "MultiselectPicklist",
                    "Text",
                    "TextArea",
                    "LongTextArea",
                    "Html",
                    "Time",
                    "Url"
                  ]
                },
                "defaultCheckboxValue": {
                  "type": "boolean",
                  "description": "Default Value \nThis field appears only when 'type' = 'Checkbox')"
                },
                "length": {
                  "type": "string",
                  "description": "Length : Number of digits to the left of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent') \nThis field appears only when 'type' = 'Currency', 'Text') \nThis field appears only when 'type' = 'Currency', 'LongTextArea') \nThis field appears only when 'type' = 'Currency', 'Html')"
                },
                "decimalPlace": {
                  "type": "string",
                  "description": "Decimal Places : Number of digits to the right of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent')"
                },
                "pickListValues": {
                  "type": "string",
                  "description": "Values : Enter values, with each value separated by a new line \nThis field appears only when 'type' = 'Picklist') \nThis field appears only when 'type' = 'Picklist', 'MultiselectPicklist')"
                },
                "visibleLines": {
                  "type": "string",
                  "description": "Visible Lines \nThis field appears only when 'type' = 'MultiselectPicklist') \nThis field appears only when 'type' = 'MultiselectPicklist', 'LongTextArea') \nThis field appears only when 'type' = 'MultiselectPicklist', 'Html')"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "helperText": {
                  "type": "string",
                  "description": "Helper Text : This text displays on detail and edit pages when users hover over the Info icon next to this field."
                },
                "defaultFieldValue": {
                  "type": "string",
                  "description": "Default Value"
                }
              },
              "required": [
                "label",
                "type",
                "length",
                "decimalPlace",
                "pickListValues",
                "visibleLines"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_TASK",
            "description": "Triggered when a user wants to Deploy Task Custom Fields in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Field Label : Enter a label to be used on displays, page layouts, reports, and list views. Also determines the Field Name used for internal reference. For example, if the Field Label is “Email”, the Field Name will be “Email__c”."
                },
                "type": {
                  "type": "string",
                  "description": "Field Type",
                  "enum": [
                    "Checkbox",
                    "Currency",
                    "Date",
                    "Email",
                    "Number",
                    "Percent",
                    "Phone",
                    "Picklist",
                    "MultiselectPicklist",
                    "Text",
                    "TextArea",
                    "LongTextArea",
                    "Html",
                    "Time",
                    "Url"
                  ]
                },
                "defaultCheckboxValue": {
                  "type": "boolean",
                  "description": "Default Value \nThis field appears only when 'type' = 'Checkbox')"
                },
                "length": {
                  "type": "string",
                  "description": "Length : Number of digits to the left of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent') \nThis field appears only when 'type' = 'Currency', 'Text') \nThis field appears only when 'type' = 'Currency', 'LongTextArea') \nThis field appears only when 'type' = 'Currency', 'Html')"
                },
                "decimalPlace": {
                  "type": "string",
                  "description": "Decimal Places : Number of digits to the right of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent')"
                },
                "pickListValues": {
                  "type": "string",
                  "description": "Values : Enter values, with each value separated by a new line \nThis field appears only when 'type' = 'Picklist') \nThis field appears only when 'type' = 'Picklist', 'MultiselectPicklist')"
                },
                "visibleLines": {
                  "type": "string",
                  "description": "Visible Lines \nThis field appears only when 'type' = 'MultiselectPicklist') \nThis field appears only when 'type' = 'MultiselectPicklist', 'LongTextArea') \nThis field appears only when 'type' = 'MultiselectPicklist', 'Html')"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "helperText": {
                  "type": "string",
                  "description": "Helper Text : This text displays on detail and edit pages when users hover over the Info icon next to this field."
                },
                "defaultFieldValue": {
                  "type": "string",
                  "description": "Default Value"
                }
              },
              "required": [
                "label",
                "type",
                "length",
                "decimalPlace",
                "pickListValues",
                "visibleLines"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_ACCOUNT",
            "description": "Triggered when a user wants to Deploy Account Custom Fields in Salesforce",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Field Label : Enter a label to be used on displays, page layouts, reports, and list views. Also determines the Field Name used for internal reference. For example, if the Field Label is “Email”, the Field Name will be “Email__c”."
                },
                "type": {
                  "type": "string",
                  "description": "Field Type",
                  "enum": [
                    "Checkbox",
                    "Currency",
                    "Date",
                    "Email",
                    "Number",
                    "Percent",
                    "Phone",
                    "Picklist",
                    "MultiselectPicklist",
                    "Text",
                    "TextArea",
                    "LongTextArea",
                    "Html",
                    "Time",
                    "Url"
                  ]
                },
                "defaultCheckboxValue": {
                  "type": "boolean",
                  "description": "Default Value \nThis field appears only when 'type' = 'Checkbox')"
                },
                "length": {
                  "type": "string",
                  "description": "Length : Number of digits to the left of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent') \nThis field appears only when 'type' = 'Currency', 'Text') \nThis field appears only when 'type' = 'Currency', 'LongTextArea') \nThis field appears only when 'type' = 'Currency', 'Html')"
                },
                "decimalPlace": {
                  "type": "string",
                  "description": "Decimal Places : Number of digits to the right of the decimal point \nThis field appears only when 'type' = 'Currency') \nThis field appears only when 'type' = 'Currency', 'Number') \nThis field appears only when 'type' = 'Currency', 'Percent')"
                },
                "pickListValues": {
                  "type": "string",
                  "description": "Values : Enter values, with each value separated by a new line \nThis field appears only when 'type' = 'Picklist') \nThis field appears only when 'type' = 'Picklist', 'MultiselectPicklist')"
                },
                "visibleLines": {
                  "type": "string",
                  "description": "Visible Lines \nThis field appears only when 'type' = 'MultiselectPicklist') \nThis field appears only when 'type' = 'MultiselectPicklist', 'LongTextArea') \nThis field appears only when 'type' = 'MultiselectPicklist', 'Html')"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "helperText": {
                  "type": "string",
                  "description": "Helper Text : This text displays on detail and edit pages when users hover over the Info icon next to this field."
                },
                "defaultFieldValue": {
                  "type": "string",
                  "description": "Default Value"
                }
              },
              "required": [
                "label",
                "type",
                "length",
                "decimalPlace",
                "pickListValues",
                "visibleLines"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_FIELD_ANY",
            "description": "Triggered when a user wants to Deploy Any Custom Fields an unknown object typein Salesforce",
            "parameters": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_WRITE_SOQL_QUERY",
            "description": "Triggered when a user wants to write an SOQL query",
            "parameters": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "object",
                  "description": "SOQL Query (example: \"SELECT Id, Name\nFROM Account\nWHERE Name = 'Ethan'\")"
                }
              },
              "required": [
                "query"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_CREATE_CUSTOM_OBJECT",
            "description": "Triggered when a user wants to deploy a custom object",
            "parameters": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Label : Object Label to be used in tabs, page layouts, and reports. Also determines the Object Name used for internal reference. For example, if the Label is “Account”, the Object Name will be “Account__c”. (example: \"Account\")"
                },
                "pluralLabel": {
                  "type": "string",
                  "description": "Plural Label (example: \"Accounts\")"
                },
                "description": {
                  "type": "string",
                  "description": "Description : A description of the Custom Object."
                },
                "recordName": {
                  "type": "string",
                  "description": "Record Name : The Record Name appears in page layouts, key lists, related lists, lookups, and search results. For example, the Record Name for Account is \"Account Name\" and for Case it is \"Case Number\". (example: \"Account Name\")"
                }
              },
              "required": [
                "label",
                "pluralLabel",
                "recordName"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "SALESFORCE_DESCRIBE_ACTION_SCHEMA",
            "description": "Use this function to get the expected schema for an object type first, if no function matches the object type that the user wants to operate on. A payload in the schema returned by this function can be passed to CREATE_RECORD_ANY to create an object in the specified type, as payload",
            "parameters": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Record Type"
                },
                "operation": {
                  "type": "string",
                  "description": "Operation Type value for example CREATE_RECORD or UPDATE_RECORD"
                }
              },
              "required": [
                "recordType",
                "operation"
              ],
              "additionalProperties": false
            }
          }
        }
      ],
"notion": [
        {
          "type": "function",
          "function": {
            "name": "NOTION_CREATE_PAGE",
            "description": "Triggered when a user wants to create a page in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "parent": {
                  "type": "object",
                  "description": "Parent : The parent page or database where the new page is inserted, represented as a JSON object with a page_id or database_id key, and the corresponding ID. (example: \"{\n  \"database_id\":\"{{DATABASE_ID}}\"\n}\")"
                },
                "properties": {
                  "type": "object",
                  "description": "Properties : The values of the page’s properties. If the parent is a database, then the schema must match the parent database’s properties. If the parent is a page, then the only valid object key is title. (example: \"{\n  \"title\":[\n    {\n      \"text\":{\n        \"content\":\"My Page\"\n      }\n    }\n  ]\n}\")"
                },
                "children": {
                  "type": "object",
                  "description": "Children (example: \"[\n  {\n    \"object\":\"block\",\n    \"type\":\"heading_2\",\n    \"heading_2\":{\n      \"rich_text\":[\n        {\n          \"type\":\"text\",\n          \"text\":{\n            \"content\":\"Lacinato kale\"\n          }\n        }\n      ]\n    }\n  }\n]\")"
                },
                "cover": {
                  "type": "object",
                  "description": "Cover (example: \"{\n  \"external\":{\n    \"url\":\"https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg\"\n  }\n}\")"
                },
                "icon": {
                  "type": "object",
                  "description": "Icon (example: \"{\n  \"emoji\":\"🥬\"\n}\")"
                }
              },
              "required": [
                "parent",
                "properties",
                "icon"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_UPDATE_PAGE",
            "description": "Triggered when a user wants to update a page in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "Page ID : Specify the ID of the Page to Update. (example: \"59833787-2cf9-4fdf-8782-e53db20768a5\")"
                },
                "archived": {
                  "type": "boolean",
                  "description": "Archived : Whether the page is archived (deleted). Set to true to archive a page. Set to false to un-archive (restore) a page."
                },
                "properties": {
                  "type": "object",
                  "description": "Properties : The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed. (example: \"{\n  \"title\":[\n    {\n      \"text\":{\n        \"content\":\"My Page\"\n      }\n    }\n  ]\n}\")"
                },
                "cover": {
                  "type": "object",
                  "description": "Cover (example: \"{\n  \"external\":{\n    \"url\":\"https://upload.wikimedia.org/wikipedia/commons/6/62/Tuscankale.jpg\"\n  }\n}\")"
                },
                "icon": {
                  "type": "object",
                  "description": "Icon (example: \"{\n  \"emoji\":\"🥬\"\n}\")"
                }
              },
              "required": [
                "pageId",
                "icon"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_GET_PAGE_BY_ID",
            "description": "Triggered when a user wants to get a page by Id in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "Page ID : Specify the ID of the Page to Get. (example: \"59833787-2cf9-4fdf-8782-e53db20768a5\")"
                }
              },
              "required": [
                "pageId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_ARCHIVE_PAGE",
            "description": "Triggered when a user wants to archive a page in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "Page ID : Specify the ID of the Page to Archive. (example: \"59833787-2cf9-4fdf-8782-e53db20768a5\")"
                }
              },
              "required": [
                "pageId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_SEARCH_PAGES",
            "description": "Triggered when a user wants to search pages in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "searchByTitleFilterSearch": {
                  "type": "object",
                  "description": "Search pages",
                  "properties": {
                    "query": {
                      "type": "string",
                      "description": "Search query"
                    },
                    "direction": {
                      "type": "string",
                      "description": "Sort direction"
                    },
                    "page_size": {
                      "type": "string",
                      "description": "Page size"
                    },
                    "filter.value": {
                      "type": "string",
                      "description": "Filter value"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_GET_PAGE_CONTENT",
            "description": "Triggered when a user wants to get a page content in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "Page ID : Specify a Block or Page ID to receive all of its block’s children in order. (example: \"59833787-2cf9-4fdf-8782-e53db20768a5\")"
                }
              },
              "required": [
                "blockId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_UPDATE_BLOCK",
            "description": "Triggered when a user wants to update a block in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "Block ID : Specify the ID of the Block to Update. (example: \"9bc30ad4-9373-46a5-84ab-0a7845ee52e6\")"
                },
                "archived": {
                  "type": "boolean",
                  "description": "Archived : Set to true to archive (delete) a block. Set to false to un-archive (restore) a block."
                },
                "paragraph": {
                  "type": "object",
                  "description": "Paragraph (example: \"{\n  \"rich_text\":[\n    {\n      \"type\":\"text\",\n      \"text\":{\n        \"content\":\"Lacinato kale\",\n        \"link\":null\n      }\n    }\n  ],\n  \"color\":\"default\"\n}\")"
                },
                "image": {
                  "type": "object",
                  "description": "Image (example: \"{\n  \"type\":\"external\",\n  \"external\":{\n    \"url\":\"https://website.domain/images/image.png\"\n  }\n}\")"
                },
                "bookmark": {
                  "type": "object",
                  "description": "Bookmark (example: \"{\n  \"caption\":[],\n  \"url\":\"https://companywebsite.com\"\n}\")"
                },
                "code": {
                  "type": "object",
                  "description": "Code (example: \"{\n  \"rich_text\":[\n    {\n      \"type\":\"text\",\n      \"text\":{\n        \"content\":\"const a = 3\"\n      }\n    }\n  ],\n  \"language\":\"javascript\"\n}\")"
                },
                "pdf": {
                  "type": "object",
                  "description": "PDF (example: \"{\n  \"type\": \"external\",\n  \"external\": {\n      \"url\": \"https://website.domain/files/doc.pdf\"\n  }\n}\")"
                },
                "table": {
                  "type": "object",
                  "description": "Table (example: \"{\n  \"table_width\":2,\n  \"has_column_header\":false,\n  \"has_row_header\":false\n}\")"
                },
                "tableOfContent": {
                  "type": "object",
                  "description": "Table of Contents (example: \"{\n  \"color\":\"default\"\n}\")"
                },
                "additionalFields": {
                  "type": "object",
                  "description": "Additional Fields (example: \"{\n  \"child_page\":{\n    \"title\":\"Lacinato kale\"\n  },\n  \"child_database\":{\n    \"title\":\"My database\"\n  }\n}\")"
                }
              },
              "required": [
                "blockId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_GET_BLOCK_BY_ID",
            "description": "Triggered when a user wants to get a block by Id in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "Block ID : Specify the ID of the Block to Get. (example: \"9bc30ad4-9373-46a5-84ab-0a7845ee52e6\")"
                }
              },
              "required": [
                "blockId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "NOTION_DELETE_BLOCK",
            "description": "Triggered when a user wants to delete a block in Notion",
            "parameters": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "Block ID : Specify the ID of the Block to Delete. (example: \"9bc30ad4-9373-46a5-84ab-0a7845ee52e6\")"
                }
              },
              "required": [
                "blockId"
              ],
              "additionalProperties": false
            }
          }
        }
      ],
"googleCalendar": [
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_CREATE_EVENT",
            "description": "Triggered when a user wants to create an event",
            "parameters": {
              "type": "object",
              "properties": {
                "eventName": {
                  "type": "string",
                  "description": "Event name"
                },
                "startTime": {
                  "type": "string",
                  "description": "Start time : Accepts Unix timestamp or ISO8601 date formats."
                },
                "endTime": {
                  "type": "string",
                  "description": "End time : Defaults to one hour after the start time if left blank."
                },
                "calendar": {
                  "type": "string",
                  "description": "Calendar : Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank."
                },
                "attendees": {
                  "type": "string",
                  "description": "Attendees : Accepts an array of email addresses or email addresses separated by commas."
                },
                "eventLocation": {
                  "type": "string",
                  "description": "Event location"
                },
                "eventDescription": {
                  "type": "string",
                  "description": "Event description"
                },
                "eventId": {
                  "type": "string",
                  "description": "Event ID : An ID from your application to associate this event with. You can use this ID to sync updates to this event later."
                },
                "includeMeetLink": {
                  "type": "boolean",
                  "description": "Include Google Meet link? : Automatically creates Google Meet conference link for this event."
                }
              },
              "required": [
                "eventName",
                "startTime"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_UPDATE_EVENT",
            "description": "Triggered when a user wants to update an event",
            "parameters": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "description": "Event ID : The ID of the event to update."
                },
                "eventName": {
                  "type": "string",
                  "description": "Event name"
                },
                "startTime": {
                  "type": "string",
                  "description": "Start time : Accepts Unix timestamp or ISO8601 date formats."
                },
                "endTime": {
                  "type": "string",
                  "description": "End time : Defaults to one hour after the start time if left blank."
                },
                "calendar": {
                  "type": "string",
                  "description": "Calendar : Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank."
                },
                "attendees": {
                  "type": "string",
                  "description": "Attendees : Accepts an array of email addresses or email addresses separated by commas."
                },
                "eventLocation": {
                  "type": "string",
                  "description": "Event location"
                },
                "eventDescription": {
                  "type": "string",
                  "description": "Event description"
                }
              },
              "required": [
                "eventId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_LIST_EVENTS",
            "description": "Triggered when a user wants to lists event",
            "parameters": {
              "type": "object",
              "properties": {
                "calendar": {
                  "type": "string",
                  "description": "Calendar : Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank."
                },
                "after": {
                  "type": "string",
                  "description": "After : Filters events that start after the provided date (Unix or ISO timestamp)."
                },
                "before": {
                  "type": "string",
                  "description": "Before : Filters events that end before the provided date (Unix or ISO timestamp)."
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_GET_EVENT_BY_ID",
            "description": "Triggered when a user wants to get event by Id",
            "parameters": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "description": "Event ID"
                },
                "calendar": {
                  "type": "string",
                  "description": "Calendar : Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank."
                }
              },
              "required": [
                "eventId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_DELETE_EVENT",
            "description": "Triggered when a user wants to get event by Id",
            "parameters": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "description": "Event ID : The ID of the calendar event to be deleted."
                },
                "calendar": {
                  "type": "string",
                  "description": "Calendar : Use Connect Portal Workflow Settings to allow users to select which calendar the event will be added to. Defaults to the user’s primary calendar if left blank."
                }
              },
              "required": [
                "eventId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_GET_CONTACTS",
            "description": "Triggered when a user wants to get contacts",
            "parameters": {
              "type": "object",
              "properties": {
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination Parameters",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "Page Cursor"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_SEARCH_CONTACTS",
            "description": "Triggered when a user wants to search contacts",
            "parameters": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Search query to search contacts"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_LIST_DIRECTORY_PEOPLE",
            "description": "List directory people",
            "parameters": {
              "type": "object",
              "properties": {
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination Parameters",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "Page Cursor"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_SEARCH_DIRECTORY_PEOPLE",
            "description": "Search directory people",
            "parameters": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Search query to search contacts"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination Parameters",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "Page Cursor"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [
                "query"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_LIST_OTHER_CONTACTS",
            "description": "List other contacts",
            "parameters": {
              "type": "object",
              "properties": {
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination Parameters",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "Page Cursor"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_SEARCH_OTHER_CONTACTS",
            "description": "Search other contacts",
            "parameters": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Search query to search contacts"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_CALENDAR_GET_AVAILABILITY",
            "description": "Get availability",
            "parameters": {
              "type": "object",
              "properties": {
                "timeMin": {
                  "type": "string",
                  "description": "The start of the interval. In ISO format",
                  "format": "date"
                },
                "timeMax": {
                  "type": "string",
                  "description": "The end of the interval. In ISO format",
                  "format": "date"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Time zone used in the response. Optional. The default is UTC."
                },
                "items": {
                  "type": "array",
                  "description": "List of calendars and/or groups to query. Defaults to the user default calendar.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The calendar or group ID."
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "timeMin",
                "timeMax"
              ],
              "additionalProperties": false
            }
          }
        }
      ],
"gmail": [
        {
          "type": "function",
          "function": {
            "name": "GMAIL_SEND_EMAIL",
            "description": "Send a email in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "toRecipients": {
                  "type": "array",
                  "description": "To : Specify the recipients as either a single string or a JSON array. (example: \"[\n  \"recipient1@domain.com\",\n  \"recipient2@domain.com\"\n]\")",
                  "items": {
                    "type": "string"
                  }
                },
                "from": {
                  "type": "string",
                  "description": "From : Specify the email of the sender."
                },
                "subject": {
                  "type": "string",
                  "description": "Subject : Specify the subject of the message."
                },
                "messageContent": {
                  "type": "string",
                  "description": "Message Content : Specify the content of the email message as plain text or HTML."
                },
                "attachments": {
                  "type": "string",
                  "description": "Attachments : Accepts either a single file object or a JSON array of file objects (example: \"[{file object}, {file object}]\")"
                },
                "additionalHeaders": {
                  "type": "object",
                  "description": "Additional Headers : Specify any additional header fields here. (example: \"{\n  \"reply-to\": \"Sender Name <sender@domain.com>\",\n}\")"
                }
              },
              "required": [
                "toRecipients",
                "from",
                "subject",
                "messageContent"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_GET_EMAIL_BY_ID",
            "description": "Get a email by id in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "User ID : Specify the user’s email address. (example: \"user@domain.com\")"
                },
                "messageId": {
                  "type": "string",
                  "description": "Message ID : Specify the ID of the message to retrieve."
                }
              },
              "required": [
                "userId",
                "messageId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_SEARCH_FOR_EMAIL",
            "description": "Search for a email in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "emailFilterFormula": {
                  "type": "string",
                  "description": "Search for email based on filter formula. For Example: var1:val1, var2 +val2"
                },
                "paginationParameters": {
                  "type": "object",
                  "description": "Pagination Parameters",
                  "properties": {
                    "pageCursor": {
                      "type": "string",
                      "description": "Page Cursor"
                    }
                  },
                  "required": [],
                  "additionalProperties": false
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_DELETE_EMAIL",
            "description": "Delete a email in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "User ID : Specify the user’s email address. (example: \"user@domain.com\")"
                },
                "messageId": {
                  "type": "string",
                  "description": "Message ID : Specify the ID of the message to trash."
                }
              },
              "required": [
                "userId",
                "messageId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_CREATE_A_CONTACT",
            "description": "Create a contact in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "givenName": {
                  "type": "string",
                  "description": "Given Name : Specify the Given Name of the Contact to create. (example: \"John\")"
                },
                "familyName": {
                  "type": "string",
                  "description": "Family Name : Specify the Family Name of the Contact to create. (example: \"Doe\")"
                },
                "email": {
                  "type": "string",
                  "description": "Email : Specify the Email Address of the Contact to create."
                },
                "additionalFields": {
                  "type": "object",
                  "description": "Additional Fields (example: \"{\n  \"addresses\": [\n    {\n      \"streetAddress\": \"1000 North St.\",\n      \"city\": \"Los Angeles\"\n    }\n  ]\n}\")"
                }
              },
              "required": [
                "givenName",
                "familyName",
                "email"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_GET_CONTACT_BY_RESOURCE_NAME",
            "description": "Get a contact by resource name in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string",
                  "description": "Resource Name : Specify the resource name of the contact to fetch."
                }
              },
              "required": [
                "resourceName"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_SEARCH_FOR_CONTACT",
            "description": "Search for a contact in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "searchTerm": {
                  "type": "string",
                  "description": "Term : Specify a search term to search for near or exact matches on the names, nickNames, emailAddresses, phoneNumbers, or organizations Contact properties."
                }
              },
              "required": [
                "searchTerm"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_DELETE_CONTACT",
            "description": "Delete a contact in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "resourceName": {
                  "type": "string",
                  "description": "Resource Name : Specify the resource name of the contact to delete."
                }
              },
              "required": [
                "resourceName"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GMAIL_CREATE_DRAFT",
            "description": "Create a draft in Gmail",
            "parameters": {
              "type": "object",
              "properties": {
                "toRecipients": {
                  "type": "array",
                  "description": "To : Specify the recipients as either a single string or a JSON array. (example: \"[\n  \"recipient1@domain.com\",\n  \"recipient2@domain.com\"\n]\")",
                  "items": {
                    "type": "string"
                  }
                },
                "from": {
                  "type": "string",
                  "description": "From : Specify the email of the sender."
                },
                "subject": {
                  "type": "string",
                  "description": "Subject : Specify the subject of the message."
                },
                "messageContent": {
                  "type": "string",
                  "description": "Message Content : Specify the content of the email message as plain text or HTML."
                },
                "attachments": {
                  "type": "string",
                  "description": "Attachments : Accepts either a single file object or a JSON array of file objects (example: \"[{file object}, {file object}]\")"
                },
                "additionalHeaders": {
                  "type": "object",
                  "description": "Additional Headers : Specify any additional header fields here. (example: \"{\n  \"reply-to\": \"Sender Name <sender@domain.com>\",\n}\")"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        }
      ],
"googledrive": [
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_GET_FILE_BY_ID",
            "description": "Get file by Id in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "File ID : The ID of the file. (example: \"1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok\")"
                },
                "additionalFields": {
                  "type": "object",
                  "description": "Additional Fields (example: \"\n  {\n    \"supportsAllDrives\": true\n  }\")"
                },
                "includeFileContents": {
                  "type": "boolean",
                  "description": "Include File Contents"
                }
              },
              "required": [
                "fileId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_SAVE_FILE",
            "description": "Save file in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "description": "File"
                },
                "parentId": {
                  "type": "string",
                  "description": "Folder : Use Connect Portal Workflow Settings to allow users to select which Folder to save files to. Defaults to the user’s root folder if left blank. (example: \"{{settings.folder}}\")"
                },
                "sharedDrive": {
                  "type": "boolean",
                  "description": "Shared Drive : Specify whether the upload target is a shared drive. Defaults to false."
                },
                "filename": {
                  "type": "string",
                  "description": "File Name : Defaults to origin file name if left blank."
                },
                "additionalFields": {
                  "type": "object",
                  "description": "Additional Fields : Specify any other fields that should be updated in JSON below. Use Connect Portal Workflow Settings to allow users to select which fields to update. (example: \"\n  {\n    \"supportsAllDrives\": true\n  }\")"
                }
              },
              "required": [
                "file"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_EXPORT_DOC",
            "description": "Export file in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "File ID : Specify the ID of the File to export (example: \"2HlC2Zf57zAst33ht0MEi3WA0_ig4xVKx3-RvzkbvIfE\")"
                },
                "mimeType": {
                  "type": "string",
                  "description": "MIME Type (example: \"application/pdf\")"
                }
              },
              "required": [
                "fileId",
                "mimeType"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_CREATE_FOLDER",
            "description": "Create folder in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "folderName": {
                  "type": "string",
                  "description": "Folder Name : Specify a name for the folder. (example: \"Folder 1\")"
                },
                "parentId": {
                  "type": "string",
                  "description": "Parent ID : Specify the parent ID to create folder within the parent"
                }
              },
              "required": [
                "folderName"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_DELETE_FOLDER",
            "description": "Delete folder in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "folderId": {
                  "type": "string",
                  "description": "Folder ID : The ID of the folder. (example: \"1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok\")"
                }
              },
              "required": [
                "folderId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_GET_FOLDER_BY_ID",
            "description": "Get folder by Id in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "folderId": {
                  "type": "string",
                  "description": "Folder ID : The ID of the folder. (example: \"1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok\")"
                }
              },
              "required": [
                "folderId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_MOVE_FOLDER",
            "description": "Move folder in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "folderId": {
                  "type": "string",
                  "description": "Folder ID : The ID of the folder. (example: \"1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok\")"
                },
                "parentId": {
                  "type": "string",
                  "description": "Parent ID : Specify the parent ID to move folder within the parent (example: \"1PVW0QtmQv-829KNvV3DLbYL8WrpS4zhtPx2Ok\")"
                }
              },
              "required": [
                "folderId",
                "parentId"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_LIST_FILES",
            "description": "List files in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "includeFolders": {
                  "type": "boolean",
                  "description": "Include Folders"
                },
                "parentId": {
                  "type": "string",
                  "description": "Folder : Use Connect Portal Workflow Settings to allow users to select which Folder to get files from. Defaults to the user’s root folder if unspecified. (example: \"{{settings.folder}}\")"
                },
                "pageSize": {
                  "type": "string",
                  "description": "Page Size : Specify the number of files to include on a page. Accepts values from 1 to 1000. Defaults to 100 if unspecified. (example: \"100\")"
                },
                "includeSharedItems": {
                  "type": "boolean",
                  "description": "Include Shared Drive Items : Specify whether search results should include files in shared drives. Defaults to false."
                },
                "additionalFields": {
                  "type": "object",
                  "description": "Additional Fields : Specify any other fields that should be updated in JSON below. Use Connect Portal Workflow Settings to allow users to select which fields to update. (example: \"\n  {\n    \"supportsAllDrives\": true\n  }\")"
                }
              },
              "required": [
                "includeFolders"
              ],
              "additionalProperties": false
            }
          }
        },
        {
          "type": "function",
          "function": {
            "name": "GOOGLE_DRIVE_SEARCH_FOLDERS",
            "description": "Search folders in Google Drive",
            "parameters": {
              "type": "object",
              "properties": {
                "parentId": {
                  "type": "string",
                  "description": "Parent ID : Specify the parent ID to search within the parent"
                },
                "driveId": {
                  "type": "string",
                  "description": "Drive ID : Search for shared drives inside shared parents"
                },
                "pageSize": {
                  "type": "string",
                  "description": "Page Size : Specify the number of folders to include on a page. Accepts values from 1 to 1000. Defaults to 100 if unspecified."
                },
                "filterFormula": {
                  "type": "string",
                  "description": "Search for folders based on filter formula. For Example: var1 = \"val1\", var2 < \"val2\""
                }
              },
              "required": [],
              "additionalProperties": false
            }
          }
        }
      ]
}
  }
}
